ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 1   


ARM COMPILER V2.32a, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil3\ARM\BIN\CA.exe main.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include<lpc21xx.h>
    2          #include<Header.h>
    3          #include<string.h>
    4          
    5          #define IR (IOPIN1 & (1<<16))
    6          #define TOUCH1 (IOPIN1 &(1<<17))
    7          #define TOUCH2 (IOPIN1 &(1<<18))
    8          #define TOUCH3 (IOPIN1 &(1<<19))   
    9          
   10          #define RLED  28
   11          
   12          
   13          unsigned int range=0;
   14          
   15          void delay(unsigned int t);  
   16          
   17          unsigned char i=0,j,k,rec;
   18          const char dat[6]="$GPGGA";   
   19          unsigned char lat[13],longi[14],time[13],lat1[10],longi1[10];
   20          unsigned char OPTION;
   21          extern unsigned char pno[11],SMS;
   22          unsigned char flag;
   23          unsigned char Gsm_Flag();
   24          
   25          
   26          void delay(unsigned int t)
   27          {
   28   1          unsigned int i;
   29   1          for(i=0;i<=t;i++);
   30   1      }
   31          
   32          
   33          void GPS_INIT();
   34          
   35          
   36          void delay21()
   37          {
   38   1          unsigned int g,h;
   39   1          
   40   1          for(g=0;g<65000;g++);
   41   1          for(h=0;h<65000;h++);
   42   1      }
   43          
   44          void send_msg(unsigned int m)
   45          {
   46   1          UART0_INIT();
   47   1          lcd_cmd(0x01);
   48   1          lcd_cmd(0x80);
   49   1          lcd_string("SMS  SENDING....");
   50   1          if(m==1)
   51   1          {    
   52   2              UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
   53   2              UART0_TX(0X0A);
   54   2              UART0_TX(0X0D);
   55   2              UART0_TX_ST("AMBULANCE DETECTED");
   56   2              UART0_TX(0X0A);
   57   2              UART0_TX(0X0D);
   58   2              UART0_TX_ST(lat1);
   59   2              UART0_TX_ST(",");
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 2   

   60   2              UART0_TX_ST(longi1);    
   61   2          }  
   62   1      
   63   1              UART0_TX(0X1A);
   64   1              lcd_cmd(0x01);
   65   1              lcd_cmd(0x80);
   66   1              lcd_string("SMS SENT....");
   67   1              delay21();delay21();delay21();
   68   1              delay21();delay21();delay21();
   69   1              delay21();delay21();delay21();
   70   1              delay21();delay21();delay21();
   71   1              delay21();delay21();
   72   1      }
   73          
   74          
   75          void send_msg1(unsigned int m)
   76          {
   77   1          UART0_INIT();
   78   1          lcd_cmd(0x01);
   79   1          lcd_cmd(0x80);
   80   1          lcd_string("SMS  SENDING....");
   81   1          if(m==1)
   82   1          {    
   83   2              UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
   84   2              UART0_TX(0X0A);
   85   2              UART0_TX(0X0D);
   86   2              UART0_TX_ST("FIRE ENGINE DETECTED");
   87   2              UART0_TX(0X0A);
   88   2              UART0_TX(0X0D);
   89   2              UART0_TX_ST(lat1);
   90   2              UART0_TX_ST(",");
   91   2              UART0_TX_ST(longi1);    
   92   2          }  
   93   1      
   94   1              UART0_TX(0X1A);
   95   1              lcd_cmd(0x01);
   96   1              lcd_cmd(0x80);
   97   1              lcd_string("SMS SENT....");
   98   1              delay21();delay21();delay21();
   99   1              delay21();delay21();delay21();
  100   1              delay21();delay21();delay21();
  101   1              delay21();delay21();delay21();
  102   1              delay21();delay21();
  103   1      }
  104          
  105          void send_msg2(unsigned int m)
  106          {
  107   1          UART0_INIT();
  108   1          lcd_cmd(0x01);
  109   1          lcd_cmd(0x80);
  110   1          lcd_string("SMS  SENDING....");
  111   1          if(m==1)
  112   1          {    
  113   2              UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
  114   2              UART0_TX(0X0A);
  115   2              UART0_TX(0X0D);
  116   2              UART0_TX_ST("VVIP VEHICLE DETECTED");
  117   2              UART0_TX(0X0A);
  118   2              UART0_TX(0X0D);
  119   2              UART0_TX_ST(lat1);
  120   2              UART0_TX_ST(",");
  121   2              UART0_TX_ST(longi1);    
  122   2          }  
  123   1      
  124   1              UART0_TX(0X1A);
  125   1              lcd_cmd(0x01);
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 3   

  126   1              lcd_cmd(0x80);
  127   1              lcd_string("SMS SENT....");
  128   1              delay21();delay21();delay21();
  129   1              delay21();delay21();delay21();
  130   1              delay21();delay21();delay21();
  131   1              delay21();delay21();delay21();
  132   1              delay21();delay21();
  133   1      }
  134          
  135          
  136          
  137          void GPS_INIT()
  138          {
  139   1          lcd_cmd(0x01);
  140   1          lcd_string(" GPS INITILIZING"); 
  141   1          first:
  142   1          for(i=0;(RX_UART1()==dat[i])&&(i<6);i++);
  143   1          if(i<6)
  144   1          {
  145   2              goto first;
  146   2          }
  147   1          else
  148   1          {
  149   2              for(i=0;RX_UART1()!='$';i++);
  150   2              if(i<60)
  151   2              {
  152   3                  goto first;
  153   3              }
  154   2          }
  155   1                
  156   1          lcd_cmd(0x01);                      
  157   1          lcd_string(" GPS INITILIZED");
  158   1      } 
  159          
  160          
  161          void GPS_READ()
  162          {   
  163   1          UART_INIT1();
  164   1          lcd_cmd(0x01);
  165   1          lcd_string("GPS READING...");   
  166   1          first:
  167   1      
  168   1          for(i=0;(RX_UART1()==dat[i])&&(i<6);i++);   // getting lat,long,time values from gps
  169   1      
  170   1          if(i<6)
  171   1          {
  172   2              goto first;
  173   2      
  174   2          }
  175   1          else
  176   1          {
  177   2              i=0;j=0;k=0;
  178   2              while(i<=34)
  179   2              {
  180   3                  if(i<10)
  181   3                  {
  182   4                      rec=RX_UART1();
  183   4                      time[i]=rec;
  184   4                  }
  185   3                  
  186   3                  else if(i>=10&&i<=22) 
  187   3                  {
  188   4                      rec=RX_UART1();
  189   4                      lat[j]=rec;
  190   4                      j++;
  191   4                  } 
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 4   

  192   3                  
  193   3                  else if(i>22)
  194   3                  {
  195   4                      rec=RX_UART1();
  196   4                      longi[k]=rec;
  197   4                      k++;
  198   4                  }
  199   3                  
  200   3                  i++;
  201   3              }    
  202   2              
  203   2              i=0;
  204   2          }
  205   1              
  206   1          lat[j]='\0';
  207   1          longi[k]='\0';
  208   1          //lat1[0]=lat[1];
  209   1          lat1[0]=lat[0];
  210   1          lat1[1]=lat[1];
  211   1          lat1[2]='.';
  212   1          lat1[3]=lat[2];
  213   1          lat1[4]=lat[3];
  214   1          lat1[5]=lat[4];
  215   1          lat1[6]=lat[5];
  216   1          lat1[7]=lat[6];
  217   1          lat1[8]=lat[7];
  218   1          lat1[9]='\0';
  219   1          
  220   1          longi1[0]=longi[1];
  221   1          longi1[1]=longi[2];
  222   1          longi1[2]='.';
  223   1          longi1[3]=longi[3];
  224   1          longi1[4]=longi[4];
  225   1          longi1[5]=longi[6];
  226   1          longi1[6]=longi[7];
  227   1          longi1[7]=longi[8];
  228   1          longi1[8]=longi[9];
  229   1          longi1[9]='\0'; 
  230   1      
  231   1          
  232   1          delay21();delay21();
  233   1          lcd_cmd(0x01);               //To display on LCD(lat,long)
  234   1          lcd_string("LATITUDE:");
  235   1          lcd_cmd(0xc0);
  236   1          lcd_string(lat1);
  237   1          delay21();delay21();delay21();
  238   1          lcd_cmd(0x01);
  239   1          lcd_string("LONGITUDE:");
  240   1          lcd_cmd(0xc0);
  241   1          lcd_string(longi1);
  242   1          delay21();delay21();delay21();                                                           
  243   1      } 
  244          
  245          void main()
  246          {   
  247   1      
  248   1          IODIR1=0X00fF0000;     
  249   1          PINSEL2=0X00000000;
  250   1          IOSET1=0X00100000; //RLED
  251   1      
  252   1      
  253   1          lcd_init();
  254   1          lcd_cmd(0x01);
  255   1          lcd_cmd(0x80);
  256   1          lcd_string("LCD INIT");
  257   1      
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 5   

  258   1          UART0_INIT();
  259   1          lcd_cmd(0x01);
  260   1          lcd_cmd(0x80);
  261   1          lcd_string("UART0 INIT");
  262   1      
  263   1          UART_INIT1();
  264   1          lcd_cmd(0x01);
  265   1          lcd_cmd(0x80);
  266   1          lcd_string("UART1 INIT");
  267   1      
  268   1          Gsm_Init();
  269   1          lcd_cmd(0x01);
  270   1          lcd_cmd(0x80);
  271   1          lcd_string("GSM INIT");
  272   1      
  273   1          GPS_INIT();
  274   1          lcd_cmd(0x01);
  275   1          lcd_cmd(0x80);
  276   1          lcd_string("GPS INIT"); 
  277   1          Gsm_Del_Msg();
  278   1      
  279   1          while(1)
  280   1          {         
  281   2               if(IR==0)
  282   2               {
  283   3                  
  284   3                  lcd_cmd(0x01);
  285   3                  delay(300000);
  286   3               }
  287   2               else
  288   2               {
  289   3                  lcd_cmd(0x01);
  290   3                  lcd_cmd(0x80);
  291   3                  lcd_string("NORMAL VEHICLE");
  292   3                  lcd_cmd(0x90);
  293   3                  lcd_string("DETECTED");
  294   3               }
  295   2          
  296   2      
  297   2              delay(300000);delay(300000);
  298   2              delay(300000);delay(300000);
  299   2              delay(300000);delay(300000);
  300   2              delay(300000);delay(300000);
  301   2              delay(300000);delay(300000);
  302   2              delay(300000);delay(300000);
  303   2      
  304   2               if(TOUCH1==0)
  305   2               {
  306   3                  lcd_cmd(0x01);
  307   3                  delay(50000);
  308   3               }
  309   2               else
  310   2               {
  311   3                  lcd_init();
  312   3                  IODIR1=0X0CF00000;
  313   3                  IOCLR1=0X00100000;
  314   3                  IOSET1=0X00600000;
  315   3                  lcd_cmd(0x01);
  316   3                  lcd_cmd(0x80);
  317   3                  lcd_string("AMBULANCE");
  318   3                  lcd_cmd(0xC0);
  319   3                  lcd_string("DETECTED");
  320   3                  GPS_READ();
  321   3                  send_msg(1);
  322   3                  delay(300000);delay(300000);
  323   3                  delay(300000);delay(300000);
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 6   

  324   3                  IOCLR1=0X00600000;
  325   3                  IOSET1=0X00100000;
  326   3               }
  327   2               delay(300000);delay(300000);
  328   2               delay(300000);delay(300000);
  329   2               delay(300000);delay(300000);delay(300000);delay(300000);
  330   2               delay(300000);delay(300000);
  331   2               delay(300000);delay(300000);
  332   2      
  333   2               if(TOUCH2==0)
  334   2               {
  335   3                  lcd_cmd(0x01);
  336   3                  delay(50000);
  337   3               }
  338   2               else
  339   2               {
  340   3                  lcd_init();
  341   3                  IODIR1=0X0CF00000;
  342   3                  IOCLR1=0X00100000;
  343   3                  IOSET1=0X00600000;
  344   3                  lcd_cmd(0x01);
  345   3                  lcd_cmd(0x80);
  346   3                  lcd_string("FIRE ENGINE");
  347   3                  lcd_cmd(0xC0);
  348   3                  lcd_string("DETECTED");
  349   3                  GPS_READ();
  350   3                  send_msg1(1);
  351   3                  delay(300000);delay(300000);
  352   3                  delay(300000);delay(300000);
  353   3                  IOCLR1=0X00600000;
  354   3                  IOSET1=0X00100000;
  355   3               }
  356   2               delay(300000);delay(300000);
  357   2              delay(300000);delay(300000);
  358   2              delay(300000);delay(300000);delay(300000);delay(300000);
  359   2              delay(300000);delay(300000);
  360   2              delay(300000);delay(300000);
  361   2      
  362   2               if(TOUCH3==0)
  363   2               {
  364   3                  lcd_cmd(0x01);
  365   3                  delay(50000);
  366   3               }
  367   2               else
  368   2               {
  369   3                  lcd_init();
  370   3                  IODIR1=0X0CF00000;
  371   3                  IOCLR1=0X00100000;
  372   3                  IOSET1=0X00600000;
  373   3                  lcd_cmd(0x01);
  374   3                  lcd_cmd(0x80);
  375   3                  lcd_string("VVIP VEHICLE");
  376   3                  lcd_cmd(0xC0);
  377   3                  lcd_string("DETECTED");
  378   3                  GPS_READ();
  379   3                  send_msg2(1);
  380   3                  delay(300000);delay(300000);
  381   3                  delay(300000);delay(300000);
  382   3                  IOCLR1=0X00600000;
  383   3                  IOSET1=0X00100000;
  384   3               }
  385   2               delay(300000);delay(300000);
  386   2              delay(300000);delay(300000);
  387   2              delay(300000);delay(300000);delay(300000);delay(300000);
  388   2              delay(300000);delay(300000);
  389   2              delay(300000);delay(300000);
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 7   

  390   2          }
  391   1      }
  392          
  393          
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (UART0_INIT?T)
 EXTERN CODE16 (UART0_TX?T)
 EXTERN CODE16 (UART0_TX_ST?T)
 EXTERN CODE16 (UART_INIT1?T)
 EXTERN CODE16 (RX_UART1?T)
 EXTERN CODE16 (Gsm_Init?T)
 EXTERN CODE16 (Gsm_Del_Msg?T)
 EXTERN CODE16 (lcd_init?T)
 EXTERN CODE16 (lcd_cmd?T)
 EXTERN CODE16 (lcd_string?T)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         dat
 PUBLIC         delay21?T
 PUBLIC         send_msg1?T
 PUBLIC         delay?T
 PUBLIC         GPS_INIT?T
 PUBLIC         send_msg?T
 PUBLIC         send_msg2?T
 PUBLIC         GPS_READ?T
 PUBLIC         main
 PUBLIC         range
 PUBLIC         i
 PUBLIC         j
 PUBLIC         k
 PUBLIC         rec
 PUBLIC         lat
 PUBLIC         longi
 PUBLIC         time
 PUBLIC         lat1
 PUBLIC         longi1
 PUBLIC         OPTION
 PUBLIC         flag



*** DATA SEGMENT '?CON?main':
 00000000          ??S_23:
 00000000            DB          'VVIP VEHICLE',0x00
 0000000D          ??S_22:
 0000000D            DB          'FIRE ENGINE',0x00
 00000019          ??S_21:
 00000019            DB          'AMBULANCE',0x00
 00000023          ??S_20:
 00000023            DB          'DETECTED',0x00
 0000002C          ??S_19:
 0000002C            DB          'NORMAL VEHICLE',0x00
 0000003B          ??S_18:
 0000003B            DB          'GPS INIT',0x00
 00000044          ??S_17:
 00000044            DB          'GSM INIT',0x00
 0000004D          ??S_16:
 0000004D            DB          'UART1 INIT',0x00
 00000058          ??S_15:
 00000058            DB          'UART0 INIT',0x00
 00000063          ??S_14:
 00000063            DB          'LCD INIT',0x00
 0000006C          ??S_13:
 0000006C            DB          'LONGITUDE:',0x00
 00000077          ??S_12:
 00000077            DB          'LATITUDE:',0x00
 00000081          ??S_11:
 00000081            DB          'GPS READING...',0x00
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 9   

 00000090          ??S_10:
 00000090            DB          ' GPS INITILIZED',0x00
 000000A0          ??S_9:
 000000A0            DB          ' GPS INITILIZING',0x00
 000000B1          ??S_8:
 000000B1            DB          'VVIP VEHICLE DETECTED',0x00
 000000C7          ??S_7:
 000000C7            DB          'FIRE ENGINE DETECTED',0x00
 000000DC          ??S_6:
 000000DC            DB          'SMS SENT....',0x00
 000000E9          ??S_5:
 000000E9            DB          ',',0x00
 000000EB          ??S_4:
 000000EB            DB          'AMBULANCE DETECTED',0x00
 000000FE          ??S_3:
 000000FE            DB          'AT+CMGS="8529746743"',0x00
 00000113          ??S_2:
 00000113            DB          'SMS  SENDING....',0x00
 00000124          dat:
 00000124           BEGIN_INIT
 00000124            DB          '$GPGGA'
 0000012A           END_INIT

*** DATA SEGMENT '?DT0?main':
 00000000          range:
 00000000           BEGIN_INIT
 00000000  00000000  DD          0x0
 00000004           END_INIT
 00000004          i:
 00000004           BEGIN_INIT
 00000004  00        DB          0x0
 00000005           END_INIT
 00000005          j:
 00000005            DS          1
 00000006          k:
 00000006            DS          1
 00000007          rec:
 00000007            DS          1
 00000008          lat:
 00000008            DS          13
 00000015          longi:
 00000015            DS          14
 00000023          time:
 00000023            DS          13
 00000030          lat1:
 00000030            DS          10
 0000003A          longi1:
 0000003A            DS          10
 00000044          OPTION:
 00000044            DS          1
 00000045          flag:
 00000045            DS          1



*** CODE SEGMENT '?PR?delay?T?main':
   26: void delay(unsigned int t)
 00000000  ---- Variable 't' assigned to Register 'R0' ----
   27: {
 00000000            ; SCOPE-START
   29:       for(i=0;i<=t;i++);
 00000000  2100      MOV         R1,#0x0
 00000002  ---- Variable 'i' assigned to Register 'R1' ----
 00000002  E000      B           L_3  ; T=0x00000006
 00000004          L_1:
 00000004  3101      ADD         R1,#0x1
 00000006          L_3:
 00000006  1C03      MOV         R3,R0 ; t
 00000008  1C0A      MOV         R2,R1 ; i
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 10  

 0000000A  429A      CMP         R2,R3 ; i
 0000000C  D9FA      BLS         L_1  ; T=0x00000004
 0000000E            ; SCOPE-END
   30: }
 0000000E  4770      BX          R14
 00000010          ENDP ; 'delay?T'


*** CODE SEGMENT '?PR?delay21?T?main':
   37: {
 00000000            ; SCOPE-START
   40:     for(g=0;g<65000;g++);
 00000000  2000      MOV         R0,#0x0
 00000002  ---- Variable 'g' assigned to Register 'R0' ----
 00000002          L_6:
 00000002  3001      ADD         R0,#0x1
 00000004  1C01      MOV         R1,R0 ; g
 00000006  4800      LDR         R2,=0xFDE8
 00000008  4291      CMP         R1,R2 ; g
 0000000A  D3FA      BCC         L_6  ; T=0x00000002
   41:     for(h=0;h<65000;h++);
 0000000C  2000      MOV         R0,#0x0
 0000000E  ---- Variable 'h' assigned to Register 'R0' ----
 0000000E          L_11:
 0000000E  3001      ADD         R0,#0x1
 00000010  1C01      MOV         R1,R0 ; h
 00000012  4800      LDR         R2,=0xFDE8
 00000014  4291      CMP         R1,R2 ; h
 00000016  D3FA      BCC         L_11  ; T=0x0000000E
 00000018            ; SCOPE-END
   42: }
 00000018  4770      BX          R14
 0000001A          ENDP ; 'delay21?T'


*** CODE SEGMENT '?PR?send_msg?T?main':
   44: void send_msg(unsigned int m)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; m
 00000004  ---- Variable 'm' assigned to Register 'R4' ----
   46:     UART0_INIT();
 00000004  F7FF      BL          UART0_INIT?T  ; T=0x0001  (1)
 00000006  FFFC      BL          UART0_INIT?T  ; T=0x0001  (2)
   47:     lcd_cmd(0x01);
 00000008  2001      MOV         R0,#0x1
 0000000A  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_cmd?T  ; T=0x0001  (2)
   48:     lcd_cmd(0x80);
 0000000E  2080      MOV         R0,#0x80
 00000010  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000012  FFF6      BL          lcd_cmd?T  ; T=0x0001  (2)
   49:     lcd_string("SMS  SENDING....");
 00000014  4800      LDR         R0,=??S_2 ; ??S_2
 00000016  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000018  FFF3      BL          lcd_string?T  ; T=0x0001  (2)
   50:     if(m==1)
 0000001A  1C20      MOV         R0,R4 ; m
 0000001C  2801      CMP         R0,#0x1 ; m
 0000001E  D11A      BNE         L_16  ; T=0x00000056
   52:         UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
 00000020  4800      LDR         R0,=??S_3 ; ??S_3
 00000022  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000024  FFED      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   53:         UART0_TX(0X0A);
 00000026  200A      MOV         R0,#0xA
 00000028  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000002A  FFEA      BL          UART0_TX?T  ; T=0x0001  (2)
   54:         UART0_TX(0X0D);
 0000002C  200D      MOV         R0,#0xD
 0000002E  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 11  

 00000030  FFE7      BL          UART0_TX?T  ; T=0x0001  (2)
   55:            UART0_TX_ST("AMBULANCE DETECTED");
 00000032  4800      LDR         R0,=??S_4 ; ??S_4
 00000034  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000036  FFE4      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   56:         UART0_TX(0X0A);
 00000038  200A      MOV         R0,#0xA
 0000003A  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          UART0_TX?T  ; T=0x0001  (2)
   57:         UART0_TX(0X0D);
 0000003E  200D      MOV         R0,#0xD
 00000040  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 00000042  FFDE      BL          UART0_TX?T  ; T=0x0001  (2)
   58:         UART0_TX_ST(lat1);
 00000044  4800      LDR         R0,=lat1 ; lat1
 00000046  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000048  FFDB      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   59:         UART0_TX_ST(",");
 0000004A  4800      LDR         R0,=??S_5 ; ??S_5
 0000004C  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 0000004E  FFD8      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   60:         UART0_TX_ST(longi1);    
 00000050  4800      LDR         R0,=longi1 ; longi1
 00000052  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000054  FFD5      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   61:     }  
 00000056          L_16:
   63:         UART0_TX(0X1A);
 00000056  201A      MOV         R0,#0x1A
 00000058  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000005A  FFD2      BL          UART0_TX?T  ; T=0x0001  (2)
   64:         lcd_cmd(0x01);
 0000005C  2001      MOV         R0,#0x1
 0000005E  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000060  FFCF      BL          lcd_cmd?T  ; T=0x0001  (2)
   65:         lcd_cmd(0x80);
 00000062  2080      MOV         R0,#0x80
 00000064  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000066  FFCC      BL          lcd_cmd?T  ; T=0x0001  (2)
   66:         lcd_string("SMS SENT....");
 00000068  4800      LDR         R0,=??S_6 ; ??S_6
 0000006A  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000006C  FFC9      BL          lcd_string?T  ; T=0x0001  (2)
   67:         delay21();delay21();delay21();
 0000006E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000070  FFC7      BL          delay21?T  ; T=0x0001  (2)
 00000072  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000074  FFC5      BL          delay21?T  ; T=0x0001  (2)
 00000076  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000078  FFC3      BL          delay21?T  ; T=0x0001  (2)
   68:         delay21();delay21();delay21();
 0000007A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000007C  FFC1      BL          delay21?T  ; T=0x0001  (2)
 0000007E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000080  FFBF      BL          delay21?T  ; T=0x0001  (2)
 00000082  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000084  FFBD      BL          delay21?T  ; T=0x0001  (2)
   69:         delay21();delay21();delay21();
 00000086  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000088  FFBB      BL          delay21?T  ; T=0x0001  (2)
 0000008A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000008C  FFB9      BL          delay21?T  ; T=0x0001  (2)
 0000008E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000090  FFB7      BL          delay21?T  ; T=0x0001  (2)
   70:         delay21();delay21();delay21();
 00000092  F7FF      BL          delay21?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 12  

 00000094  FFB5      BL          delay21?T  ; T=0x0001  (2)
 00000096  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000098  FFB3      BL          delay21?T  ; T=0x0001  (2)
 0000009A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000009C  FFB1      BL          delay21?T  ; T=0x0001  (2)
   71:          delay21();delay21();
 0000009E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A0  FFAF      BL          delay21?T  ; T=0x0001  (2)
 000000A2  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A4  FFAD      BL          delay21?T  ; T=0x0001  (2)
   72: }
 000000A6  BC10      POP         {R4}
 000000A8  BC08      POP         {R3}
 000000AA  4718      BX          R3
 000000AC          ENDP ; 'send_msg?T'


*** CODE SEGMENT '?PR?send_msg1?T?main':
   75: void send_msg1(unsigned int m)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; m
 00000004  ---- Variable 'm' assigned to Register 'R4' ----
   77:     UART0_INIT();
 00000004  F7FF      BL          UART0_INIT?T  ; T=0x0001  (1)
 00000006  FFFC      BL          UART0_INIT?T  ; T=0x0001  (2)
   78:     lcd_cmd(0x01);
 00000008  2001      MOV         R0,#0x1
 0000000A  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_cmd?T  ; T=0x0001  (2)
   79:     lcd_cmd(0x80);
 0000000E  2080      MOV         R0,#0x80
 00000010  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000012  FFF6      BL          lcd_cmd?T  ; T=0x0001  (2)
   80:     lcd_string("SMS  SENDING....");
 00000014  4800      LDR         R0,=??S_2 ; ??S_2
 00000016  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000018  FFF3      BL          lcd_string?T  ; T=0x0001  (2)
   81:     if(m==1)
 0000001A  1C20      MOV         R0,R4 ; m
 0000001C  2801      CMP         R0,#0x1 ; m
 0000001E  D11A      BNE         L_17  ; T=0x00000056
   83:         UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
 00000020  4800      LDR         R0,=??S_3 ; ??S_3
 00000022  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000024  FFED      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   84:         UART0_TX(0X0A);
 00000026  200A      MOV         R0,#0xA
 00000028  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000002A  FFEA      BL          UART0_TX?T  ; T=0x0001  (2)
   85:         UART0_TX(0X0D);
 0000002C  200D      MOV         R0,#0xD
 0000002E  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 00000030  FFE7      BL          UART0_TX?T  ; T=0x0001  (2)
   86:            UART0_TX_ST("FIRE ENGINE DETECTED");
 00000032  4800      LDR         R0,=??S_7 ; ??S_7
 00000034  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000036  FFE4      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   87:         UART0_TX(0X0A);
 00000038  200A      MOV         R0,#0xA
 0000003A  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          UART0_TX?T  ; T=0x0001  (2)
   88:         UART0_TX(0X0D);
 0000003E  200D      MOV         R0,#0xD
 00000040  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 00000042  FFDE      BL          UART0_TX?T  ; T=0x0001  (2)
   89:         UART0_TX_ST(lat1);
 00000044  4800      LDR         R0,=lat1 ; lat1
 00000046  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 13  

 00000048  FFDB      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   90:         UART0_TX_ST(",");
 0000004A  4800      LDR         R0,=??S_5 ; ??S_5
 0000004C  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 0000004E  FFD8      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   91:         UART0_TX_ST(longi1);    
 00000050  4800      LDR         R0,=longi1 ; longi1
 00000052  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000054  FFD5      BL          UART0_TX_ST?T  ; T=0x0001  (2)
   92:     }  
 00000056          L_17:
   94:         UART0_TX(0X1A);
 00000056  201A      MOV         R0,#0x1A
 00000058  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000005A  FFD2      BL          UART0_TX?T  ; T=0x0001  (2)
   95:         lcd_cmd(0x01);
 0000005C  2001      MOV         R0,#0x1
 0000005E  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000060  FFCF      BL          lcd_cmd?T  ; T=0x0001  (2)
   96:         lcd_cmd(0x80);
 00000062  2080      MOV         R0,#0x80
 00000064  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000066  FFCC      BL          lcd_cmd?T  ; T=0x0001  (2)
   97:         lcd_string("SMS SENT....");
 00000068  4800      LDR         R0,=??S_6 ; ??S_6
 0000006A  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000006C  FFC9      BL          lcd_string?T  ; T=0x0001  (2)
   98:         delay21();delay21();delay21();
 0000006E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000070  FFC7      BL          delay21?T  ; T=0x0001  (2)
 00000072  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000074  FFC5      BL          delay21?T  ; T=0x0001  (2)
 00000076  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000078  FFC3      BL          delay21?T  ; T=0x0001  (2)
   99:         delay21();delay21();delay21();
 0000007A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000007C  FFC1      BL          delay21?T  ; T=0x0001  (2)
 0000007E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000080  FFBF      BL          delay21?T  ; T=0x0001  (2)
 00000082  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000084  FFBD      BL          delay21?T  ; T=0x0001  (2)
  100:         delay21();delay21();delay21();
 00000086  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000088  FFBB      BL          delay21?T  ; T=0x0001  (2)
 0000008A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000008C  FFB9      BL          delay21?T  ; T=0x0001  (2)
 0000008E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000090  FFB7      BL          delay21?T  ; T=0x0001  (2)
  101:         delay21();delay21();delay21();
 00000092  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000094  FFB5      BL          delay21?T  ; T=0x0001  (2)
 00000096  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000098  FFB3      BL          delay21?T  ; T=0x0001  (2)
 0000009A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000009C  FFB1      BL          delay21?T  ; T=0x0001  (2)
  102:          delay21();delay21();
 0000009E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A0  FFAF      BL          delay21?T  ; T=0x0001  (2)
 000000A2  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A4  FFAD      BL          delay21?T  ; T=0x0001  (2)
  103: }
 000000A6  BC10      POP         {R4}
 000000A8  BC08      POP         {R3}
 000000AA  4718      BX          R3
 000000AC          ENDP ; 'send_msg1?T'


*** CODE SEGMENT '?PR?send_msg2?T?main':
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 14  

  105: void send_msg2(unsigned int m)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; m
 00000004  ---- Variable 'm' assigned to Register 'R4' ----
  107:     UART0_INIT();
 00000004  F7FF      BL          UART0_INIT?T  ; T=0x0001  (1)
 00000006  FFFC      BL          UART0_INIT?T  ; T=0x0001  (2)
  108:     lcd_cmd(0x01);
 00000008  2001      MOV         R0,#0x1
 0000000A  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_cmd?T  ; T=0x0001  (2)
  109:     lcd_cmd(0x80);
 0000000E  2080      MOV         R0,#0x80
 00000010  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000012  FFF6      BL          lcd_cmd?T  ; T=0x0001  (2)
  110:     lcd_string("SMS  SENDING....");
 00000014  4800      LDR         R0,=??S_2 ; ??S_2
 00000016  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000018  FFF3      BL          lcd_string?T  ; T=0x0001  (2)
  111:     if(m==1)
 0000001A  1C20      MOV         R0,R4 ; m
 0000001C  2801      CMP         R0,#0x1 ; m
 0000001E  D11A      BNE         L_18  ; T=0x00000056
  113:         UART0_TX_ST("AT+CMGS=\"8529746743\"");    // attention command for sending message to phone number  
 00000020  4800      LDR         R0,=??S_3 ; ??S_3
 00000022  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000024  FFED      BL          UART0_TX_ST?T  ; T=0x0001  (2)
  114:         UART0_TX(0X0A);
 00000026  200A      MOV         R0,#0xA
 00000028  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000002A  FFEA      BL          UART0_TX?T  ; T=0x0001  (2)
  115:         UART0_TX(0X0D);
 0000002C  200D      MOV         R0,#0xD
 0000002E  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 00000030  FFE7      BL          UART0_TX?T  ; T=0x0001  (2)
  116:            UART0_TX_ST("VVIP VEHICLE DETECTED");
 00000032  4800      LDR         R0,=??S_8 ; ??S_8
 00000034  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000036  FFE4      BL          UART0_TX_ST?T  ; T=0x0001  (2)
  117:         UART0_TX(0X0A);
 00000038  200A      MOV         R0,#0xA
 0000003A  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          UART0_TX?T  ; T=0x0001  (2)
  118:         UART0_TX(0X0D);
 0000003E  200D      MOV         R0,#0xD
 00000040  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 00000042  FFDE      BL          UART0_TX?T  ; T=0x0001  (2)
  119:         UART0_TX_ST(lat1);
 00000044  4800      LDR         R0,=lat1 ; lat1
 00000046  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000048  FFDB      BL          UART0_TX_ST?T  ; T=0x0001  (2)
  120:         UART0_TX_ST(",");
 0000004A  4800      LDR         R0,=??S_5 ; ??S_5
 0000004C  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 0000004E  FFD8      BL          UART0_TX_ST?T  ; T=0x0001  (2)
  121:         UART0_TX_ST(longi1);    
 00000050  4800      LDR         R0,=longi1 ; longi1
 00000052  F7FF      BL          UART0_TX_ST?T  ; T=0x0001  (1)
 00000054  FFD5      BL          UART0_TX_ST?T  ; T=0x0001  (2)
  122:     }  
 00000056          L_18:
  124:         UART0_TX(0X1A);
 00000056  201A      MOV         R0,#0x1A
 00000058  F7FF      BL          UART0_TX?T  ; T=0x0001  (1)
 0000005A  FFD2      BL          UART0_TX?T  ; T=0x0001  (2)
  125:         lcd_cmd(0x01);
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 15  

 0000005C  2001      MOV         R0,#0x1
 0000005E  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000060  FFCF      BL          lcd_cmd?T  ; T=0x0001  (2)
  126:         lcd_cmd(0x80);
 00000062  2080      MOV         R0,#0x80
 00000064  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000066  FFCC      BL          lcd_cmd?T  ; T=0x0001  (2)
  127:         lcd_string("SMS SENT....");
 00000068  4800      LDR         R0,=??S_6 ; ??S_6
 0000006A  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000006C  FFC9      BL          lcd_string?T  ; T=0x0001  (2)
  128:         delay21();delay21();delay21();
 0000006E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000070  FFC7      BL          delay21?T  ; T=0x0001  (2)
 00000072  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000074  FFC5      BL          delay21?T  ; T=0x0001  (2)
 00000076  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000078  FFC3      BL          delay21?T  ; T=0x0001  (2)
  129:         delay21();delay21();delay21();
 0000007A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000007C  FFC1      BL          delay21?T  ; T=0x0001  (2)
 0000007E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000080  FFBF      BL          delay21?T  ; T=0x0001  (2)
 00000082  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000084  FFBD      BL          delay21?T  ; T=0x0001  (2)
  130:         delay21();delay21();delay21();
 00000086  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000088  FFBB      BL          delay21?T  ; T=0x0001  (2)
 0000008A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000008C  FFB9      BL          delay21?T  ; T=0x0001  (2)
 0000008E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000090  FFB7      BL          delay21?T  ; T=0x0001  (2)
  131:         delay21();delay21();delay21();
 00000092  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000094  FFB5      BL          delay21?T  ; T=0x0001  (2)
 00000096  F7FF      BL          delay21?T  ; T=0x0001  (1)
 00000098  FFB3      BL          delay21?T  ; T=0x0001  (2)
 0000009A  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000009C  FFB1      BL          delay21?T  ; T=0x0001  (2)
  132:          delay21();delay21();
 0000009E  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A0  FFAF      BL          delay21?T  ; T=0x0001  (2)
 000000A2  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000000A4  FFAD      BL          delay21?T  ; T=0x0001  (2)
  133: }
 000000A6  BC10      POP         {R4}
 000000A8  BC08      POP         {R3}
 000000AA  4718      BX          R3
 000000AC          ENDP ; 'send_msg2?T'


*** CODE SEGMENT '?PR?GPS_INIT?T?main':
  137: void GPS_INIT()
 00000000  B500      PUSH        {LR}
  139:     lcd_cmd(0x01);
 00000002  2001      MOV         R0,#0x1
 00000004  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000006  FFFC      BL          lcd_cmd?T  ; T=0x0001  (2)
  140:     lcd_string(" GPS INITILIZING"); 
 00000008  4800      LDR         R0,=??S_9 ; ??S_9
 0000000A  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_string?T  ; T=0x0001  (2)
  142:     for(i=0;(RX_UART1()==dat[i])&&(i<6);i++);
 0000000E          first:
 0000000E  2100      MOV         R1,#0x0
 00000010  4800      LDR         R0,=i ; i
 00000012  7001      STRB        R1,[R0,#0x0] ; i
 00000014  E003      B           L_22  ; T=0x0000001E
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 16  

 00000016          L_20:
 00000016  4800      LDR         R0,=i ; i
 00000018  7801      LDRB        R1,[R0,#0x0] ; i
 0000001A  3101      ADD         R1,#0x1
 0000001C  7001      STRB        R1,[R0,#0x0] ; i
 0000001E          L_22:
 0000001E  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 00000020  FFEF      BL          RX_UART1?T  ; T=0x0001  (2)
 00000022  0601      LSL         R1,R0,#0x18 ; RX_UART1?T
 00000024  0E09      LSR         R1,R1,#0x18
 00000026  4800      LDR         R0,=i ; i
 00000028  7800      LDRB        R0,[R0,#0x0] ; i
 0000002A  4800      LDR         R2,=dat ; dat
 0000002C  5C12      LDRB        R2,[R2,R0]
 0000002E  4291      CMP         R1,R2
 00000030  D101      BNE         L_21  ; T=0x00000036
 00000032  2806      CMP         R0,#0x6
 00000034  DBEF      BLT         L_20  ; T=0x00000016
 00000036          L_21:
  143:     if(i<6)
 00000036  2806      CMP         R0,#0x6
 00000038  DA01      BGE         $ + 0x6  ; T=0x0000003E
 0000003A  F7FF      BL          first  ; T=0x7FFFFFFF  (1)
 0000003C  FFE0      BL          first  ; T=0x7FFFFFFF  (2)
  149:         for(i=0;RX_UART1()!='$';i++);
 00000042          L_32:
 00000042  2100      MOV         R1,#0x0
 00000044  4800      LDR         R0,=i ; i
 00000046  7001      STRB        R1,[R0,#0x0] ; i
 00000048  E001      B           L_30  ; T=0x0000004E
 0000004A          L_28:
 0000004A  4800      LDR         R0,=i ; i
 0000004C  7801      LDRB        R1,[R0,#0x0] ; i
 0000004E  3101      ADD         R1,#0x1
 00000050  7001      STRB        R1,[R0,#0x0] ; i
 00000052          L_30:
 00000052  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 00000054  FFD5      BL          RX_UART1?T  ; T=0x0001  (2)
 00000056  0600      LSL         R0,R0,#0x18 ; RX_UART1?T
 00000058  0E00      LSR         R0,R0,#0x18
 0000005A  2824      CMP         R0,#0x24
 0000005C  D1F5      BNE         L_28  ; T=0x0000004A
  150:         if(i<60)
 0000005E  4800      LDR         R0,=i ; i
 00000060  7800      LDRB        R0,[R0,#0x0] ; i
 00000062  283C      CMP         R0,#0x3C
 00000064  DA01      BGE         $ + 0x6  ; T=0x0000006A
 00000066  F7FF      BL          first  ; T=0x7FFFFFFF  (1)
 00000068  FFCA      BL          first  ; T=0x7FFFFFFF  (2)
  156:     lcd_cmd(0x01);                      
 0000006E  2001      MOV         R0,#0x1
 00000070  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000072  FFC6      BL          lcd_cmd?T  ; T=0x0001  (2)
  157:     lcd_string(" GPS INITILIZED");
 00000074  4800      LDR         R0,=??S_10 ; ??S_10
 00000076  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000078  FFC3      BL          lcd_string?T  ; T=0x0001  (2)
  158: } 
 0000007A  BC08      POP         {R3}
 0000007C  4718      BX          R3
 0000007E          ENDP ; 'GPS_INIT?T'


*** CODE SEGMENT '?PR?GPS_READ?T?main':
  161: void GPS_READ()
 00000000  B510      PUSH        {R4,LR}
  163:     UART_INIT1();
 00000002  F7FF      BL          UART_INIT1?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 17  

 00000004  FFFD      BL          UART_INIT1?T  ; T=0x0001  (2)
  164:     lcd_cmd(0x01);
 00000006  2001      MOV         R0,#0x1
 00000008  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000000A  FFFA      BL          lcd_cmd?T  ; T=0x0001  (2)
  165:     lcd_string("GPS READING...");   
 0000000C  4800      LDR         R0,=??S_11 ; ??S_11
 0000000E  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000010  FFF7      BL          lcd_string?T  ; T=0x0001  (2)
  168:     for(i=0;(RX_UART1()==dat[i])&&(i<6);i++);   // getting lat,long,time values from gps
 00000012          first:
 00000012  2100      MOV         R1,#0x0
 00000014  4800      LDR         R0,=i ; i
 00000016  7001      STRB        R1,[R0,#0x0] ; i
 00000018  E003      B           L_37  ; T=0x00000022
 0000001A          L_35:
 0000001A  4800      LDR         R0,=i ; i
 0000001C  7801      LDRB        R1,[R0,#0x0] ; i
 0000001E  3101      ADD         R1,#0x1
 00000020  7001      STRB        R1,[R0,#0x0] ; i
 00000022          L_37:
 00000022  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 00000024  FFED      BL          RX_UART1?T  ; T=0x0001  (2)
 00000026  0601      LSL         R1,R0,#0x18 ; RX_UART1?T
 00000028  0E09      LSR         R1,R1,#0x18
 0000002A  4800      LDR         R0,=i ; i
 0000002C  7800      LDRB        R0,[R0,#0x0] ; i
 0000002E  4800      LDR         R2,=dat ; dat
 00000030  5C12      LDRB        R2,[R2,R0]
 00000032  4291      CMP         R1,R2
 00000034  D101      BNE         L_36  ; T=0x0000003A
 00000036  2806      CMP         R0,#0x6
 00000038  DBEF      BLT         L_35  ; T=0x0000001A
 0000003A          L_36:
  170:     if(i<6)
 0000003A  2806      CMP         R0,#0x6
 0000003C  DA01      BGE         $ + 0x6  ; T=0x00000042
 0000003E  F7FF      BL          first  ; T=0x7FFFFFFF  (1)
 00000040  FFDE      BL          first  ; T=0x7FFFFFFF  (2)
  174:     }
 00000046          L_41:
  177:         i=0;j=0;k=0;
 00000046  2100      MOV         R1,#0x0
 00000048  4800      LDR         R0,=i ; i
 0000004A  7001      STRB        R1,[R0,#0x0] ; i
 0000004C  2100      MOV         R1,#0x0
 0000004E  4800      LDR         R0,=j ; j
 00000050  7001      STRB        R1,[R0,#0x0] ; j
 00000052  2100      MOV         R1,#0x0
 00000054  4800      LDR         R0,=k ; k
 00000056  7001      STRB        R1,[R0,#0x0] ; k
  178:         while(i<=34)
 00000058  E035      B           L_43  ; T=0x000000C6
 0000005A          L_45:
  180:             if(i<10)
 0000005A  4800      LDR         R0,=i ; i
 0000005C  7800      LDRB        R0,[R0,#0x0] ; i
 0000005E  1C04      MOV         R4,R0
 00000060  2C0A      CMP         R4,#0xA
 00000062  DA09      BGE         L_47  ; T=0x00000078
  182:                 rec=RX_UART1();
 00000064  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 00000066  FFCC      BL          RX_UART1?T  ; T=0x0001  (2)
 00000068  4800      LDR         R1,=rec ; rec
 0000006A  7008      STRB        R0,[R1,#0x0] ; rec
  183:                 time[i]=rec;
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 18  

 0000006C  4800      LDR         R0,=rec ; rec
 0000006E  7800      LDRB        R0,[R0,#0x0] ; rec
 00000070  4800      LDR         R1,=i ; i
 00000072  7809      LDRB        R1,[R1,#0x0] ; i
 00000074  1C0A      MOV         R2,R1
 00000076  4800      LDR         R1,=time ; time
 00000078  5488      STRB        R0,[R1,R2]
  184:             }
 0000007A  E020      B           L_48  ; T=0x000000BE
 0000007C          L_47:
  186:             else if(i>=10&&i<=22) 
 0000007C  2C0A      CMP         R4,#0xA
 0000007E  DB0E      BLT         L_49  ; T=0x0000009E
 00000080  2C16      CMP         R4,#0x16
 00000082  DC0C      BGT         L_49  ; T=0x0000009E
  188:                 rec=RX_UART1();
 00000084  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 00000086  FFBC      BL          RX_UART1?T  ; T=0x0001  (2)
 00000088  4800      LDR         R1,=rec ; rec
 0000008A  7008      STRB        R0,[R1,#0x0] ; rec
  189:                 lat[j]=rec;
 0000008C  4800      LDR         R0,=rec ; rec
 0000008E  7800      LDRB        R0,[R0,#0x0] ; rec
 00000090  4800      LDR         R1,=j ; j
 00000092  7809      LDRB        R1,[R1,#0x0] ; j
 00000094  1C0B      MOV         R3,R1
 00000096  4800      LDR         R2,=lat ; lat
 00000098  54D0      STRB        R0,[R2,R3]
  190:                 j++;
 0000009A  4800      LDR         R0,=j ; j
 0000009C  3101      ADD         R1,#0x1
 0000009E  7001      STRB        R1,[R0,#0x0] ; j
  191:             } 
 000000A0  E00D      B           L_48  ; T=0x000000BE
 000000A2          L_49:
  193:             else if(i>22)
 000000A2  2C16      CMP         R4,#0x16
 000000A4  DD0B      BLE         L_48  ; T=0x000000BE
  195:                 rec=RX_UART1();
 000000A6  F7FF      BL          RX_UART1?T  ; T=0x0001  (1)
 000000A8  FFAB      BL          RX_UART1?T  ; T=0x0001  (2)
 000000AA  4800      LDR         R1,=rec ; rec
 000000AC  7008      STRB        R0,[R1,#0x0] ; rec
  196:                 longi[k]=rec;
 000000AE  4800      LDR         R0,=rec ; rec
 000000B0  7800      LDRB        R0,[R0,#0x0] ; rec
 000000B2  4800      LDR         R1,=k ; k
 000000B4  7809      LDRB        R1,[R1,#0x0] ; k
 000000B6  1C0B      MOV         R3,R1
 000000B8  4800      LDR         R2,=longi ; longi
 000000BA  54D0      STRB        R0,[R2,R3]
  197:                 k++;
 000000BC  4800      LDR         R0,=k ; k
 000000BE  3101      ADD         R1,#0x1
 000000C0  7001      STRB        R1,[R0,#0x0] ; k
  198:             }
 000000C2          L_48:
  200:             i++;
 000000C2  4800      LDR         R0,=i ; i
 000000C4  7801      LDRB        R1,[R0,#0x0] ; i
 000000C6  3101      ADD         R1,#0x1
 000000C8  7001      STRB        R1,[R0,#0x0] ; i
  201:         }    
 000000CA          L_43:
 000000CA  4800      LDR         R0,=i ; i
 000000CC  7800      LDRB        R0,[R0,#0x0] ; i
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 19  

 000000CE  2822      CMP         R0,#0x22
 000000D0  DDC3      BLE         L_45  ; T=0x0000005A
  203:         i=0;
 000000D2  2100      MOV         R1,#0x0
 000000D4  4800      LDR         R0,=i ; i
 000000D6  7001      STRB        R1,[R0,#0x0] ; i
  206:     lat[j]='\0';
 000000D8  2000      MOV         R0,#0x0
 000000DA  4800      LDR         R1,=j ; j
 000000DC  7809      LDRB        R1,[R1,#0x0] ; j
 000000DE  1C0A      MOV         R2,R1
 000000E0  4800      LDR         R1,=lat ; lat
 000000E2  5488      STRB        R0,[R1,R2]
  207:     longi[k]='\0';
 000000E4  2000      MOV         R0,#0x0
 000000E6  4800      LDR         R1,=k ; k
 000000E8  7809      LDRB        R1,[R1,#0x0] ; k
 000000EA  1C0A      MOV         R2,R1
 000000EC  4800      LDR         R1,=longi ; longi
 000000EE  5488      STRB        R0,[R1,R2]
  209:     lat1[0]=lat[0];
 000000F0  4800      LDR         R0,=lat ; lat
 000000F2  7801      LDRB        R1,[R0,#0x0] ; lat
 000000F4  4800      LDR         R0,=lat1 ; lat1
 000000F6  7001      STRB        R1,[R0,#0x0] ; lat1
  210:     lat1[1]=lat[1];
 000000F8  4800      LDR         R0,=lat + 0x1 ; lat+1
 000000FA  7801      LDRB        R1,[R0,#0x0] ; lat+1
 000000FC  4800      LDR         R0,=lat1 + 0x1 ; lat1+1
 000000FE  7001      STRB        R1,[R0,#0x0] ; lat1+1
  211:     lat1[2]='.';
 00000100  212E      MOV         R1,#0x2E
 00000102  4800      LDR         R0,=lat1 + 0x2 ; lat1+2
 00000104  7001      STRB        R1,[R0,#0x0] ; lat1+2
  212:     lat1[3]=lat[2];
 00000106  4800      LDR         R0,=lat + 0x2 ; lat+2
 00000108  7801      LDRB        R1,[R0,#0x0] ; lat+2
 0000010A  4800      LDR         R0,=lat1 + 0x3 ; lat1+3
 0000010C  7001      STRB        R1,[R0,#0x0] ; lat1+3
  213:     lat1[4]=lat[3];
 0000010E  4800      LDR         R0,=lat + 0x3 ; lat+3
 00000110  7801      LDRB        R1,[R0,#0x0] ; lat+3
 00000112  4800      LDR         R0,=lat1 + 0x4 ; lat1+4
 00000114  7001      STRB        R1,[R0,#0x0] ; lat1+4
  214:     lat1[5]=lat[4];
 00000116  4800      LDR         R0,=lat + 0x4 ; lat+4
 00000118  7801      LDRB        R1,[R0,#0x0] ; lat+4
 0000011A  4800      LDR         R0,=lat1 + 0x5 ; lat1+5
 0000011C  7001      STRB        R1,[R0,#0x0] ; lat1+5
  215:     lat1[6]=lat[5];
 0000011E  4800      LDR         R0,=lat + 0x5 ; lat+5
 00000120  7801      LDRB        R1,[R0,#0x0] ; lat+5
 00000122  4800      LDR         R0,=lat1 + 0x6 ; lat1+6
 00000124  7001      STRB        R1,[R0,#0x0] ; lat1+6
  216:     lat1[7]=lat[6];
 00000126  4800      LDR         R0,=lat + 0x6 ; lat+6
 00000128  7801      LDRB        R1,[R0,#0x0] ; lat+6
 0000012A  4800      LDR         R0,=lat1 + 0x7 ; lat1+7
 0000012C  7001      STRB        R1,[R0,#0x0] ; lat1+7
  217:     lat1[8]=lat[7];
 0000012E  4800      LDR         R0,=lat + 0x7 ; lat+7
 00000130  7801      LDRB        R1,[R0,#0x0] ; lat+7
 00000132  4800      LDR         R0,=lat1 + 0x8 ; lat1+8
 00000134  7001      STRB        R1,[R0,#0x0] ; lat1+8
  218:     lat1[9]='\0';
 00000136  2100      MOV         R1,#0x0
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 20  

 00000138  4800      LDR         R0,=lat1 + 0x9 ; lat1+9
 0000013A  7001      STRB        R1,[R0,#0x0] ; lat1+9
  220:     longi1[0]=longi[1];
 0000013C  4800      LDR         R0,=longi + 0x1 ; longi+1
 0000013E  7801      LDRB        R1,[R0,#0x0] ; longi+1
 00000140  4800      LDR         R0,=longi1 ; longi1
 00000142  7001      STRB        R1,[R0,#0x0] ; longi1
  221:     longi1[1]=longi[2];
 00000144  4800      LDR         R0,=longi + 0x2 ; longi+2
 00000146  7801      LDRB        R1,[R0,#0x0] ; longi+2
 00000148  4800      LDR         R0,=longi1 + 0x1 ; longi1+1
 0000014A  7001      STRB        R1,[R0,#0x0] ; longi1+1
  222:     longi1[2]='.';
 0000014C  212E      MOV         R1,#0x2E
 0000014E  4800      LDR         R0,=longi1 + 0x2 ; longi1+2
 00000150  7001      STRB        R1,[R0,#0x0] ; longi1+2
  223:     longi1[3]=longi[3];
 00000152  4800      LDR         R0,=longi + 0x3 ; longi+3
 00000154  7801      LDRB        R1,[R0,#0x0] ; longi+3
 00000156  4800      LDR         R0,=longi1 + 0x3 ; longi1+3
 00000158  7001      STRB        R1,[R0,#0x0] ; longi1+3
  224:     longi1[4]=longi[4];
 0000015A  4800      LDR         R0,=longi + 0x4 ; longi+4
 0000015C  7801      LDRB        R1,[R0,#0x0] ; longi+4
 0000015E  4800      LDR         R0,=longi1 + 0x4 ; longi1+4
 00000160  7001      STRB        R1,[R0,#0x0] ; longi1+4
  225:     longi1[5]=longi[6];
 00000162  4800      LDR         R0,=longi + 0x6 ; longi+6
 00000164  7801      LDRB        R1,[R0,#0x0] ; longi+6
 00000166  4800      LDR         R0,=longi1 + 0x5 ; longi1+5
 00000168  7001      STRB        R1,[R0,#0x0] ; longi1+5
  226:     longi1[6]=longi[7];
 0000016A  4800      LDR         R0,=longi + 0x7 ; longi+7
 0000016C  7801      LDRB        R1,[R0,#0x0] ; longi+7
 0000016E  4800      LDR         R0,=longi1 + 0x6 ; longi1+6
 00000170  7001      STRB        R1,[R0,#0x0] ; longi1+6
  227:     longi1[7]=longi[8];
 00000172  4800      LDR         R0,=longi + 0x8 ; longi+8
 00000174  7801      LDRB        R1,[R0,#0x0] ; longi+8
 00000176  4800      LDR         R0,=longi1 + 0x7 ; longi1+7
 00000178  7001      STRB        R1,[R0,#0x0] ; longi1+7
  228:     longi1[8]=longi[9];
 0000017A  4800      LDR         R0,=longi + 0x9 ; longi+9
 0000017C  7801      LDRB        R1,[R0,#0x0] ; longi+9
 0000017E  4800      LDR         R0,=longi1 + 0x8 ; longi1+8
 00000180  7001      STRB        R1,[R0,#0x0] ; longi1+8
  229:     longi1[9]='\0'; 
 00000182  2100      MOV         R1,#0x0
 00000184  4800      LDR         R0,=longi1 + 0x9 ; longi1+9
 00000186  7001      STRB        R1,[R0,#0x0] ; longi1+9
  232:     delay21();delay21();
 00000188  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000018A  FF3A      BL          delay21?T  ; T=0x0001  (2)
 0000018C  F7FF      BL          delay21?T  ; T=0x0001  (1)
 0000018E  FF38      BL          delay21?T  ; T=0x0001  (2)
  233:     lcd_cmd(0x01);               //To display on LCD(lat,long)
 00000190  2001      MOV         R0,#0x1
 00000192  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000194  FF35      BL          lcd_cmd?T  ; T=0x0001  (2)
  234:     lcd_string("LATITUDE:");
 00000196  4800      LDR         R0,=??S_12 ; ??S_12
 00000198  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000019A  FF32      BL          lcd_string?T  ; T=0x0001  (2)
  235:     lcd_cmd(0xc0);
 0000019C  20C0      MOV         R0,#0xC0
 0000019E  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 21  

 000001A0  FF2F      BL          lcd_cmd?T  ; T=0x0001  (2)
  236:     lcd_string(lat1);
 000001A2  4800      LDR         R0,=lat1 ; lat1
 000001A4  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000001A6  FF2C      BL          lcd_string?T  ; T=0x0001  (2)
  237:     delay21();delay21();delay21();
 000001A8  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001AA  FF2A      BL          delay21?T  ; T=0x0001  (2)
 000001AC  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001AE  FF28      BL          delay21?T  ; T=0x0001  (2)
 000001B0  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001B2  FF26      BL          delay21?T  ; T=0x0001  (2)
  238:     lcd_cmd(0x01);
 000001B4  2001      MOV         R0,#0x1
 000001B6  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000001B8  FF23      BL          lcd_cmd?T  ; T=0x0001  (2)
  239:     lcd_string("LONGITUDE:");
 000001BA  4800      LDR         R0,=??S_13 ; ??S_13
 000001BC  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000001BE  FF20      BL          lcd_string?T  ; T=0x0001  (2)
  240:     lcd_cmd(0xc0);
 000001C0  20C0      MOV         R0,#0xC0
 000001C2  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000001C4  FF1D      BL          lcd_cmd?T  ; T=0x0001  (2)
  241:     lcd_string(longi1);
 000001C6  4800      LDR         R0,=longi1 ; longi1
 000001C8  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000001CA  FF1A      BL          lcd_string?T  ; T=0x0001  (2)
  242:     delay21();delay21();delay21();                                                           
 000001CC  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001CE  FF18      BL          delay21?T  ; T=0x0001  (2)
 000001D0  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001D2  FF16      BL          delay21?T  ; T=0x0001  (2)
 000001D4  F7FF      BL          delay21?T  ; T=0x0001  (1)
 000001D6  FF14      BL          delay21?T  ; T=0x0001  (2)
  243: } 
 000001D8  BC10      POP         {R4}
 000001DA  BC08      POP         {R3}
 000001DC  4718      BX          R3
 000001DE          ENDP ; 'GPS_READ?T'


*** CODE SEGMENT '?PR?main?main':
  245: void main()
 00000000  B500      PUSH        {LR}
  248:     IODIR1=0X00fF0000;     
 00000002  4800      LDR         R1,=0xFF0000
 00000004  4800      LDR         R0,=0xE0028018
 00000006  6001      STR         R1,[R0,#0x0]
  249:     PINSEL2=0X00000000;
 00000008  2100      MOV         R1,#0x0
 0000000A  4800      LDR         R0,=0xE002C014
 0000000C  6001      STR         R1,[R0,#0x0]
  250:     IOSET1=0X00100000; //RLED
 0000000E  4800      LDR         R1,=0x100000
 00000010  4800      LDR         R0,=0xE0028014
 00000012  6001      STR         R1,[R0,#0x0]
  253:     lcd_init();
 00000014  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 00000016  FFF4      BL          lcd_init?T  ; T=0x0001  (2)
  254:     lcd_cmd(0x01);
 00000018  2001      MOV         R0,#0x1
 0000001A  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          lcd_cmd?T  ; T=0x0001  (2)
  255:     lcd_cmd(0x80);
 0000001E  2080      MOV         R0,#0x80
 00000020  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000022  FFEE      BL          lcd_cmd?T  ; T=0x0001  (2)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 22  

  256:     lcd_string("LCD INIT");
 00000024  4800      LDR         R0,=??S_14 ; ??S_14
 00000026  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000028  FFEB      BL          lcd_string?T  ; T=0x0001  (2)
  258:     UART0_INIT();
 0000002A  F7FF      BL          UART0_INIT?T  ; T=0x0001  (1)
 0000002C  FFE9      BL          UART0_INIT?T  ; T=0x0001  (2)
  259:     lcd_cmd(0x01);
 0000002E  2001      MOV         R0,#0x1
 00000030  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000032  FFE6      BL          lcd_cmd?T  ; T=0x0001  (2)
  260:     lcd_cmd(0x80);
 00000034  2080      MOV         R0,#0x80
 00000036  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000038  FFE3      BL          lcd_cmd?T  ; T=0x0001  (2)
  261:     lcd_string("UART0 INIT");
 0000003A  4800      LDR         R0,=??S_15 ; ??S_15
 0000003C  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000003E  FFE0      BL          lcd_string?T  ; T=0x0001  (2)
  263:     UART_INIT1();
 00000040  F7FF      BL          UART_INIT1?T  ; T=0x0001  (1)
 00000042  FFDE      BL          UART_INIT1?T  ; T=0x0001  (2)
  264:     lcd_cmd(0x01);
 00000044  2001      MOV         R0,#0x1
 00000046  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000048  FFDB      BL          lcd_cmd?T  ; T=0x0001  (2)
  265:     lcd_cmd(0x80);
 0000004A  2080      MOV         R0,#0x80
 0000004C  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000004E  FFD8      BL          lcd_cmd?T  ; T=0x0001  (2)
  266:     lcd_string("UART1 INIT");
 00000050  4800      LDR         R0,=??S_16 ; ??S_16
 00000052  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000054  FFD5      BL          lcd_string?T  ; T=0x0001  (2)
  268:     Gsm_Init();
 00000056  F7FF      BL          Gsm_Init?T  ; T=0x0001  (1)
 00000058  FFD3      BL          Gsm_Init?T  ; T=0x0001  (2)
  269:     lcd_cmd(0x01);
 0000005A  2001      MOV         R0,#0x1
 0000005C  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000005E  FFD0      BL          lcd_cmd?T  ; T=0x0001  (2)
  270:     lcd_cmd(0x80);
 00000060  2080      MOV         R0,#0x80
 00000062  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000064  FFCD      BL          lcd_cmd?T  ; T=0x0001  (2)
  271:     lcd_string("GSM INIT");
 00000066  4800      LDR         R0,=??S_17 ; ??S_17
 00000068  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000006A  FFCA      BL          lcd_string?T  ; T=0x0001  (2)
  273:     GPS_INIT();
 0000006C  F7FF      BL          GPS_INIT?T  ; T=0x0001  (1)
 0000006E  FFC8      BL          GPS_INIT?T  ; T=0x0001  (2)
  274:     lcd_cmd(0x01);
 00000070  2001      MOV         R0,#0x1
 00000072  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000074  FFC5      BL          lcd_cmd?T  ; T=0x0001  (2)
  275:     lcd_cmd(0x80);
 00000076  2080      MOV         R0,#0x80
 00000078  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000007A  FFC2      BL          lcd_cmd?T  ; T=0x0001  (2)
  276:     lcd_string("GPS INIT"); 
 0000007C  4800      LDR         R0,=??S_18 ; ??S_18
 0000007E  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000080  FFBF      BL          lcd_string?T  ; T=0x0001  (2)
  277:     Gsm_Del_Msg();
 00000082  F7FF      BL          Gsm_Del_Msg?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 23  

 00000084  FFBD      BL          Gsm_Del_Msg?T  ; T=0x0001  (2)
  279:     while(1)
 00000086          L_54:
  281:          if(IR==0)
 00000086  4800      LDR         R0,=0xE0028010
 00000088  6800      LDR         R0,[R0,#0x0]
 0000008A  4800      LDR         R1,=0x10000
 0000008C  4208      TST         R0,R1
 0000008E  D106      BNE         L_56  ; T=0x0000009E
  284:             lcd_cmd(0x01);
 00000090  2001      MOV         R0,#0x1
 00000092  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000094  FFB5      BL          lcd_cmd?T  ; T=0x0001  (2)
  285:             delay(300000);
 00000096  4800      LDR         R0,=0x493E0
 00000098  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000009A  FFB2      BL          delay?T  ; T=0x0001  (2)
  286:          }
 0000009C  E00E      B           L_57  ; T=0x000000BC
 0000009E          L_56:
  289:             lcd_cmd(0x01);
 0000009E  2001      MOV         R0,#0x1
 000000A0  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000000A2  FFAE      BL          lcd_cmd?T  ; T=0x0001  (2)
  290:             lcd_cmd(0x80);
 000000A4  2080      MOV         R0,#0x80
 000000A6  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000000A8  FFAB      BL          lcd_cmd?T  ; T=0x0001  (2)
  291:             lcd_string("NORMAL VEHICLE");
 000000AA  4800      LDR         R0,=??S_19 ; ??S_19
 000000AC  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000000AE  FFA8      BL          lcd_string?T  ; T=0x0001  (2)
  292:             lcd_cmd(0x90);
 000000B0  2090      MOV         R0,#0x90
 000000B2  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000000B4  FFA5      BL          lcd_cmd?T  ; T=0x0001  (2)
  293:             lcd_string("DETECTED");
 000000B6  4800      LDR         R0,=??S_20 ; ??S_20
 000000B8  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000000BA  FFA2      BL          lcd_string?T  ; T=0x0001  (2)
  294:          }
 000000BC          L_57:
  297:         delay(300000);delay(300000);
 000000BC  4800      LDR         R0,=0x493E0
 000000BE  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000C0  FF9F      BL          delay?T  ; T=0x0001  (2)
 000000C2  4800      LDR         R0,=0x493E0
 000000C4  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000C6  FF9C      BL          delay?T  ; T=0x0001  (2)
  298:         delay(300000);delay(300000);
 000000C8  4800      LDR         R0,=0x493E0
 000000CA  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000CC  FF99      BL          delay?T  ; T=0x0001  (2)
 000000CE  4800      LDR         R0,=0x493E0
 000000D0  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000D2  FF96      BL          delay?T  ; T=0x0001  (2)
  299:         delay(300000);delay(300000);
 000000D4  4800      LDR         R0,=0x493E0
 000000D6  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000D8  FF93      BL          delay?T  ; T=0x0001  (2)
 000000DA  4800      LDR         R0,=0x493E0
 000000DC  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000DE  FF90      BL          delay?T  ; T=0x0001  (2)
  300:         delay(300000);delay(300000);
 000000E0  4800      LDR         R0,=0x493E0
 000000E2  F7FF      BL          delay?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 24  

 000000E4  FF8D      BL          delay?T  ; T=0x0001  (2)
 000000E6  4800      LDR         R0,=0x493E0
 000000E8  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000EA  FF8A      BL          delay?T  ; T=0x0001  (2)
  301:         delay(300000);delay(300000);
 000000EC  4800      LDR         R0,=0x493E0
 000000EE  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000F0  FF87      BL          delay?T  ; T=0x0001  (2)
 000000F2  4800      LDR         R0,=0x493E0
 000000F4  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000F6  FF84      BL          delay?T  ; T=0x0001  (2)
  302:         delay(300000);delay(300000);
 000000F8  4800      LDR         R0,=0x493E0
 000000FA  F7FF      BL          delay?T  ; T=0x0001  (1)
 000000FC  FF81      BL          delay?T  ; T=0x0001  (2)
 000000FE  4800      LDR         R0,=0x493E0
 00000100  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000102  FF7E      BL          delay?T  ; T=0x0001  (2)
  304:          if(TOUCH1==0)
 00000104  4800      LDR         R0,=0xE0028010
 00000106  6800      LDR         R0,[R0,#0x0]
 00000108  4800      LDR         R1,=0x20000
 0000010A  4208      TST         R0,R1
 0000010C  D106      BNE         L_58  ; T=0x0000011C
  306:             lcd_cmd(0x01);
 0000010E  2001      MOV         R0,#0x1
 00000110  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000112  FF76      BL          lcd_cmd?T  ; T=0x0001  (2)
  307:             delay(50000);
 00000114  4800      LDR         R0,=0xC350
 00000116  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000118  FF73      BL          delay?T  ; T=0x0001  (2)
  308:          }
 0000011A  E030      B           L_59  ; T=0x0000017E
 0000011C          L_58:
  311:             lcd_init();
 0000011C  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 0000011E  FF70      BL          lcd_init?T  ; T=0x0001  (2)
  312:             IODIR1=0X0CF00000;
 00000120  4800      LDR         R1,=0xCF00000
 00000122  4800      LDR         R0,=0xE0028018
 00000124  6001      STR         R1,[R0,#0x0]
  313:             IOCLR1=0X00100000;
 00000126  4800      LDR         R1,=0x100000
 00000128  4800      LDR         R0,=0xE002801C
 0000012A  6001      STR         R1,[R0,#0x0]
  314:             IOSET1=0X00600000;
 0000012C  4800      LDR         R1,=0x600000
 0000012E  4800      LDR         R0,=0xE0028014
 00000130  6001      STR         R1,[R0,#0x0]
  315:             lcd_cmd(0x01);
 00000132  2001      MOV         R0,#0x1
 00000134  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000136  FF64      BL          lcd_cmd?T  ; T=0x0001  (2)
  316:             lcd_cmd(0x80);
 00000138  2080      MOV         R0,#0x80
 0000013A  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000013C  FF61      BL          lcd_cmd?T  ; T=0x0001  (2)
  317:             lcd_string("AMBULANCE");
 0000013E  4800      LDR         R0,=??S_21 ; ??S_21
 00000140  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000142  FF5E      BL          lcd_string?T  ; T=0x0001  (2)
  318:             lcd_cmd(0xC0);
 00000144  20C0      MOV         R0,#0xC0
 00000146  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000148  FF5B      BL          lcd_cmd?T  ; T=0x0001  (2)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 25  

  319:             lcd_string("DETECTED");
 0000014A  4800      LDR         R0,=??S_20 ; ??S_20
 0000014C  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 0000014E  FF58      BL          lcd_string?T  ; T=0x0001  (2)
  320:             GPS_READ();
 00000150  F7FF      BL          GPS_READ?T  ; T=0x0001  (1)
 00000152  FF56      BL          GPS_READ?T  ; T=0x0001  (2)
  321:             send_msg(1);
 00000154  2001      MOV         R0,#0x1
 00000156  F7FF      BL          send_msg?T  ; T=0x0001  (1)
 00000158  FF53      BL          send_msg?T  ; T=0x0001  (2)
  322:             delay(300000);delay(300000);
 0000015A  4800      LDR         R0,=0x493E0
 0000015C  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000015E  FF50      BL          delay?T  ; T=0x0001  (2)
 00000160  4800      LDR         R0,=0x493E0
 00000162  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000164  FF4D      BL          delay?T  ; T=0x0001  (2)
  323:             delay(300000);delay(300000);
 00000166  4800      LDR         R0,=0x493E0
 00000168  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000016A  FF4A      BL          delay?T  ; T=0x0001  (2)
 0000016C  4800      LDR         R0,=0x493E0
 0000016E  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000170  FF47      BL          delay?T  ; T=0x0001  (2)
  324:             IOCLR1=0X00600000;
 00000172  4800      LDR         R1,=0x600000
 00000174  4800      LDR         R0,=0xE002801C
 00000176  6001      STR         R1,[R0,#0x0]
  325:             IOSET1=0X00100000;
 00000178  4800      LDR         R1,=0x100000
 0000017A  4800      LDR         R0,=0xE0028014
 0000017C  6001      STR         R1,[R0,#0x0]
  326:          }
 0000017E          L_59:
  327:          delay(300000);delay(300000);
 0000017E  4800      LDR         R0,=0x493E0
 00000180  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000182  FF3E      BL          delay?T  ; T=0x0001  (2)
 00000184  4800      LDR         R0,=0x493E0
 00000186  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000188  FF3B      BL          delay?T  ; T=0x0001  (2)
  328:          delay(300000);delay(300000);
 0000018A  4800      LDR         R0,=0x493E0
 0000018C  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000018E  FF38      BL          delay?T  ; T=0x0001  (2)
 00000190  4800      LDR         R0,=0x493E0
 00000192  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000194  FF35      BL          delay?T  ; T=0x0001  (2)
  329:          delay(300000);delay(300000);delay(300000);delay(300000);
 00000196  4800      LDR         R0,=0x493E0
 00000198  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000019A  FF32      BL          delay?T  ; T=0x0001  (2)
 0000019C  4800      LDR         R0,=0x493E0
 0000019E  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001A0  FF2F      BL          delay?T  ; T=0x0001  (2)
 000001A2  4800      LDR         R0,=0x493E0
 000001A4  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001A6  FF2C      BL          delay?T  ; T=0x0001  (2)
 000001A8  4800      LDR         R0,=0x493E0
 000001AA  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001AC  FF29      BL          delay?T  ; T=0x0001  (2)
  330:          delay(300000);delay(300000);
 000001AE  4800      LDR         R0,=0x493E0
 000001B0  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001B2  FF26      BL          delay?T  ; T=0x0001  (2)
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 26  

 000001B4  4800      LDR         R0,=0x493E0
 000001B6  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001B8  FF23      BL          delay?T  ; T=0x0001  (2)
  331:          delay(300000);delay(300000);
 000001BA  4800      LDR         R0,=0x493E0
 000001BC  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001BE  FF20      BL          delay?T  ; T=0x0001  (2)
 000001C0  4800      LDR         R0,=0x493E0
 000001C2  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001C4  FF1D      BL          delay?T  ; T=0x0001  (2)
  333:          if(TOUCH2==0)
 000001C6  4800      LDR         R0,=0xE0028010
 000001C8  6800      LDR         R0,[R0,#0x0]
 000001CA  4800      LDR         R1,=0x40000
 000001CC  4208      TST         R0,R1
 000001CE  D106      BNE         L_60  ; T=0x000001DE
  335:             lcd_cmd(0x01);
 000001D0  2001      MOV         R0,#0x1
 000001D2  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000001D4  FF15      BL          lcd_cmd?T  ; T=0x0001  (2)
  336:             delay(50000);
 000001D6  4800      LDR         R0,=0xC350
 000001D8  F7FF      BL          delay?T  ; T=0x0001  (1)
 000001DA  FF12      BL          delay?T  ; T=0x0001  (2)
  337:          }
 000001DC  E030      B           L_61  ; T=0x00000240
 000001DE          L_60:
  340:             lcd_init();
 000001DE  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 000001E0  FF0F      BL          lcd_init?T  ; T=0x0001  (2)
  341:             IODIR1=0X0CF00000;
 000001E2  4800      LDR         R1,=0xCF00000
 000001E4  4800      LDR         R0,=0xE0028018
 000001E6  6001      STR         R1,[R0,#0x0]
  342:             IOCLR1=0X00100000;
 000001E8  4800      LDR         R1,=0x100000
 000001EA  4800      LDR         R0,=0xE002801C
 000001EC  6001      STR         R1,[R0,#0x0]
  343:             IOSET1=0X00600000;
 000001EE  4800      LDR         R1,=0x600000
 000001F0  4800      LDR         R0,=0xE0028014
 000001F2  6001      STR         R1,[R0,#0x0]
  344:             lcd_cmd(0x01);
 000001F4  2001      MOV         R0,#0x1
 000001F6  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000001F8  FF03      BL          lcd_cmd?T  ; T=0x0001  (2)
  345:             lcd_cmd(0x80);
 000001FA  2080      MOV         R0,#0x80
 000001FC  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000001FE  FF00      BL          lcd_cmd?T  ; T=0x0001  (2)
  346:             lcd_string("FIRE ENGINE");
 00000200  4800      LDR         R0,=??S_22 ; ??S_22
 00000202  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000204  FEFD      BL          lcd_string?T  ; T=0x0001  (2)
  347:             lcd_cmd(0xC0);
 00000206  20C0      MOV         R0,#0xC0
 00000208  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 0000020A  FEFA      BL          lcd_cmd?T  ; T=0x0001  (2)
  348:             lcd_string("DETECTED");
 0000020C  4800      LDR         R0,=??S_20 ; ??S_20
 0000020E  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 00000210  FEF7      BL          lcd_string?T  ; T=0x0001  (2)
  349:             GPS_READ();
 00000212  F7FF      BL          GPS_READ?T  ; T=0x0001  (1)
 00000214  FEF5      BL          GPS_READ?T  ; T=0x0001  (2)
  350:             send_msg1(1);
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 27  

 00000216  2001      MOV         R0,#0x1
 00000218  F7FF      BL          send_msg1?T  ; T=0x0001  (1)
 0000021A  FEF2      BL          send_msg1?T  ; T=0x0001  (2)
  351:             delay(300000);delay(300000);
 0000021C  4800      LDR         R0,=0x493E0
 0000021E  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000220  FEEF      BL          delay?T  ; T=0x0001  (2)
 00000222  4800      LDR         R0,=0x493E0
 00000224  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000226  FEEC      BL          delay?T  ; T=0x0001  (2)
  352:             delay(300000);delay(300000);
 00000228  4800      LDR         R0,=0x493E0
 0000022A  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000022C  FEE9      BL          delay?T  ; T=0x0001  (2)
 0000022E  4800      LDR         R0,=0x493E0
 00000230  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000232  FEE6      BL          delay?T  ; T=0x0001  (2)
  353:             IOCLR1=0X00600000;
 00000234  4800      LDR         R1,=0x600000
 00000236  4800      LDR         R0,=0xE002801C
 00000238  6001      STR         R1,[R0,#0x0]
  354:             IOSET1=0X00100000;
 0000023A  4800      LDR         R1,=0x100000
 0000023C  4800      LDR         R0,=0xE0028014
 0000023E  6001      STR         R1,[R0,#0x0]
  355:          }
 00000240          L_61:
  356:          delay(300000);delay(300000);
 00000240  4800      LDR         R0,=0x493E0
 00000242  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000244  FEDD      BL          delay?T  ; T=0x0001  (2)
 00000246  4800      LDR         R0,=0x493E0
 00000248  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000024A  FEDA      BL          delay?T  ; T=0x0001  (2)
  357:         delay(300000);delay(300000);
 0000024C  4800      LDR         R0,=0x493E0
 0000024E  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000250  FED7      BL          delay?T  ; T=0x0001  (2)
 00000252  4800      LDR         R0,=0x493E0
 00000254  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000256  FED4      BL          delay?T  ; T=0x0001  (2)
  358:         delay(300000);delay(300000);delay(300000);delay(300000);
 00000258  4800      LDR         R0,=0x493E0
 0000025A  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000025C  FED1      BL          delay?T  ; T=0x0001  (2)
 0000025E  4800      LDR         R0,=0x493E0
 00000260  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000262  FECE      BL          delay?T  ; T=0x0001  (2)
 00000264  4800      LDR         R0,=0x493E0
 00000266  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000268  FECB      BL          delay?T  ; T=0x0001  (2)
 0000026A  4800      LDR         R0,=0x493E0
 0000026C  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000026E  FEC8      BL          delay?T  ; T=0x0001  (2)
  359:         delay(300000);delay(300000);
 00000270  4800      LDR         R0,=0x493E0
 00000272  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000274  FEC5      BL          delay?T  ; T=0x0001  (2)
 00000276  4800      LDR         R0,=0x493E0
 00000278  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000027A  FEC2      BL          delay?T  ; T=0x0001  (2)
  360:         delay(300000);delay(300000);
 0000027C  4800      LDR         R0,=0x493E0
 0000027E  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000280  FEBF      BL          delay?T  ; T=0x0001  (2)
 00000282  4800      LDR         R0,=0x493E0
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 28  

 00000284  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000286  FEBC      BL          delay?T  ; T=0x0001  (2)
  362:          if(TOUCH3==0)
 00000288  4800      LDR         R0,=0xE0028010
 0000028A  6800      LDR         R0,[R0,#0x0]
 0000028C  4800      LDR         R1,=0x80000
 0000028E  4208      TST         R0,R1
 00000290  D106      BNE         L_62  ; T=0x000002A0
  364:             lcd_cmd(0x01);
 00000292  2001      MOV         R0,#0x1
 00000294  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000296  FEB4      BL          lcd_cmd?T  ; T=0x0001  (2)
  365:             delay(50000);
 00000298  4800      LDR         R0,=0xC350
 0000029A  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000029C  FEB1      BL          delay?T  ; T=0x0001  (2)
  366:          }
 0000029E  E030      B           L_63  ; T=0x00000302
 000002A0          L_62:
  369:             lcd_init();
 000002A0  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 000002A2  FEAE      BL          lcd_init?T  ; T=0x0001  (2)
  370:             IODIR1=0X0CF00000;
 000002A4  4800      LDR         R1,=0xCF00000
 000002A6  4800      LDR         R0,=0xE0028018
 000002A8  6001      STR         R1,[R0,#0x0]
  371:             IOCLR1=0X00100000;
 000002AA  4800      LDR         R1,=0x100000
 000002AC  4800      LDR         R0,=0xE002801C
 000002AE  6001      STR         R1,[R0,#0x0]
  372:             IOSET1=0X00600000;
 000002B0  4800      LDR         R1,=0x600000
 000002B2  4800      LDR         R0,=0xE0028014
 000002B4  6001      STR         R1,[R0,#0x0]
  373:             lcd_cmd(0x01);
 000002B6  2001      MOV         R0,#0x1
 000002B8  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000002BA  FEA2      BL          lcd_cmd?T  ; T=0x0001  (2)
  374:             lcd_cmd(0x80);
 000002BC  2080      MOV         R0,#0x80
 000002BE  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000002C0  FE9F      BL          lcd_cmd?T  ; T=0x0001  (2)
  375:             lcd_string("VVIP VEHICLE");
 000002C2  4800      LDR         R0,=??S_23 ; ??S_23
 000002C4  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000002C6  FE9C      BL          lcd_string?T  ; T=0x0001  (2)
  376:             lcd_cmd(0xC0);
 000002C8  20C0      MOV         R0,#0xC0
 000002CA  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 000002CC  FE99      BL          lcd_cmd?T  ; T=0x0001  (2)
  377:             lcd_string("DETECTED");
 000002CE  4800      LDR         R0,=??S_20 ; ??S_20
 000002D0  F7FF      BL          lcd_string?T  ; T=0x0001  (1)
 000002D2  FE96      BL          lcd_string?T  ; T=0x0001  (2)
  378:             GPS_READ();
 000002D4  F7FF      BL          GPS_READ?T  ; T=0x0001  (1)
 000002D6  FE94      BL          GPS_READ?T  ; T=0x0001  (2)
  379:             send_msg2(1);
 000002D8  2001      MOV         R0,#0x1
 000002DA  F7FF      BL          send_msg2?T  ; T=0x0001  (1)
 000002DC  FE91      BL          send_msg2?T  ; T=0x0001  (2)
  380:             delay(300000);delay(300000);
 000002DE  4800      LDR         R0,=0x493E0
 000002E0  F7FF      BL          delay?T  ; T=0x0001  (1)
 000002E2  FE8E      BL          delay?T  ; T=0x0001  (2)
 000002E4  4800      LDR         R0,=0x493E0
ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 29  

 000002E6  F7FF      BL          delay?T  ; T=0x0001  (1)
 000002E8  FE8B      BL          delay?T  ; T=0x0001  (2)
  381:             delay(300000);delay(300000);
 000002EA  4800      LDR         R0,=0x493E0
 000002EC  F7FF      BL          delay?T  ; T=0x0001  (1)
 000002EE  FE88      BL          delay?T  ; T=0x0001  (2)
 000002F0  4800      LDR         R0,=0x493E0
 000002F2  F7FF      BL          delay?T  ; T=0x0001  (1)
 000002F4  FE85      BL          delay?T  ; T=0x0001  (2)
  382:             IOCLR1=0X00600000;
 000002F6  4800      LDR         R1,=0x600000
 000002F8  4800      LDR         R0,=0xE002801C
 000002FA  6001      STR         R1,[R0,#0x0]
  383:             IOSET1=0X00100000;
 000002FC  4800      LDR         R1,=0x100000
 000002FE  4800      LDR         R0,=0xE0028014
 00000300  6001      STR         R1,[R0,#0x0]
  384:          }
 00000302          L_63:
  385:          delay(300000);delay(300000);
 00000302  4800      LDR         R0,=0x493E0
 00000304  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000306  FE7C      BL          delay?T  ; T=0x0001  (2)
 00000308  4800      LDR         R0,=0x493E0
 0000030A  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000030C  FE79      BL          delay?T  ; T=0x0001  (2)
  386:         delay(300000);delay(300000);
 0000030E  4800      LDR         R0,=0x493E0
 00000310  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000312  FE76      BL          delay?T  ; T=0x0001  (2)
 00000314  4800      LDR         R0,=0x493E0
 00000316  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000318  FE73      BL          delay?T  ; T=0x0001  (2)
  387:         delay(300000);delay(300000);delay(300000);delay(300000);
 0000031A  4800      LDR         R0,=0x493E0
 0000031C  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000031E  FE70      BL          delay?T  ; T=0x0001  (2)
 00000320  4800      LDR         R0,=0x493E0
 00000322  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000324  FE6D      BL          delay?T  ; T=0x0001  (2)
 00000326  4800      LDR         R0,=0x493E0
 00000328  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000032A  FE6A      BL          delay?T  ; T=0x0001  (2)
 0000032C  4800      LDR         R0,=0x493E0
 0000032E  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000330  FE67      BL          delay?T  ; T=0x0001  (2)
  388:         delay(300000);delay(300000);
 00000332  4800      LDR         R0,=0x493E0
 00000334  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000336  FE64      BL          delay?T  ; T=0x0001  (2)
 00000338  4800      LDR         R0,=0x493E0
 0000033A  F7FF      BL          delay?T  ; T=0x0001  (1)
 0000033C  FE61      BL          delay?T  ; T=0x0001  (2)
  389:         delay(300000);delay(300000);
 0000033E  4800      LDR         R0,=0x493E0
 00000340  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000342  FE5E      BL          delay?T  ; T=0x0001  (2)
 00000344  4800      LDR         R0,=0x493E0
 00000346  F7FF      BL          delay?T  ; T=0x0001  (1)
 00000348  FE5B      BL          delay?T  ; T=0x0001  (2)
  390:       }
 0000034A  E69C      B           L_54  ; T=0x00000086
  391: }
 0000034C  BC08      POP         {R3}
 0000034E  4718      BX          R3
 00000350          ENDP ; 'main'

ARM COMPILER V2.32a,  main                                                                 21/06/22  23:48:52  PAGE 30  



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =        70
  const size           =       298
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
