ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 1   


ARM COMPILER V2.32a, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.OBJ
COMPILER INVOKED BY: D:\keil3\ARM\BIN\CA.exe LCD.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include<lpc21xx.h>
    2          #include<Header.h>
    3          
    4          void lcd_init()
    5          {
    6   1          unsigned char i,cmd[6]={0x02,0x28,0x08,0x0E,0x06,0x01}; 
    7   1          IODIR0=0X0000f000;
    8   1          IODIR1=0X0c000000;
    9   1          for(i=0;i<6;i++)
   10   1          {
   11   2              lcd_cmd(cmd[i]);
   12   2              Delay(50000);
   13   2          }
   14   1      }
   15          
   16          void lcd_cmd(unsigned int command)
   17          {
   18   1          unsigned int x;
   19   1          x=command;
   20   1          x=x & 0xf0;
   21   1          x=x<<8;
   22   1          IOCLR0 = 0x0000f000;
   23   1          IOSET0=x;
   24   1          IOCLR1=0x0c000000;      //register select and enable
   25   1          IOSET1=0x08000000;      //rs=0 n en=1 pin 22 rs
   26   1          Delay(50000);
   27   1          IOCLR1=0x08000000;
   28   1          Delay(50000);
   29   1          
   30   1          x=command;
   31   1          x=x & 0x0f;
   32   1          IOCLR0 = 0x0000f000;
   33   1          x=x<<12;
   34   1          IOSET0=x;
   35   1          IOCLR1=0x0c000000;      //register select and enable
   36   1          IOSET1=0x08000000;
   37   1          Delay(50000);
   38   1          IOCLR1=0x08000000;
   39   1          Delay(50000);
   40   1      }
   41          
   42          void lcd_data(unsigned int data1)
   43          {
   44   1          unsigned int value;
   45   1          value=data1;
   46   1        
   47   1          value=value & 0xf0;
   48   1        
   49   1          value=value<<8;
   50   1          IOCLR0 = 0x0000f000;
   51   1          IOSET0=value;
   52   1          IOCLR1=0x0c000000;
   53   1          IOSET1=0x0C000000;
   54   1          Delay(50000);
   55   1          IOCLR1=0x08000000;
   56   1          Delay(50000);
   57   1        
   58   1          value=data1;
   59   1          value=value & 0x0f;
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 2   

   60   1          IOCLR0 = 0x0000f000;
   61   1          value=value<<12;
   62   1          IOSET0=value;
   63   1          IOCLR1=0x0C000000;
   64   1          IOSET1=0x0C000000;
   65   1          Delay(50000);
   66   1          IOCLR1=0x08000000;
   67   1          Delay(50000);
   68   1      }
   69          
   70          
   71          
   72          
   73          void Delay(unsigned int k)
   74          {
   75   1          unsigned int i,j;
   76   1          for(i=0;i<k;i++);
   77   1          for(j=0;j<100;j++);
   78   1      }
   79          
   80          void lcd_string(unsigned char *Ptr)
   81          {
   82   1          while(*Ptr)
   83   1          {
   84   2              lcd_data(*Ptr);
   85   2              Ptr++;
   86   2          }
   87   1      }
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** PUBLICS:
 PUBLIC         lcd_init?T
 PUBLIC         lcd_cmd?T
 PUBLIC         lcd_data?T
 PUBLIC         Delay?T
 PUBLIC         lcd_string?T



*** DATA SEGMENT '?CON?LCD':
 00000000          ?tpl?0001:
 00000000           BEGIN_INIT
 00000000  02        DB          0x2
 00000001  28        DB          0x28
 00000002  08        DB          0x8
 00000003  0E        DB          0xE
 00000004  06        DB          0x6
 00000005  01        DB          0x1
 00000006           END_INIT



*** CODE SEGMENT '?PR?lcd_init?T?LCD':
    4: void lcd_init()
 00000000  B510      PUSH        {R4,LR}
 00000002  B082      SUB         R13,#0x8
    5: {
 00000004            ; SCOPE-START
    6:     unsigned char i,cmd[6]={0x02,0x28,0x08,0x0E,0x06,0x01}; 
 00000004  4800      LDR         R1,=?tpl?0001 ; ?tpl?0001
 00000006  A800      ADD         R0,R13,#0x0
 00000008  2206      MOV         R2,#0x6
 0000000A          L_21:
 0000000A  780B      LDRB        R3,[R1,#0x0]
 0000000C  7003      STRB        R3,[R0,#0x0]
 0000000E  1C49      ADD         R1,R1,#0x1
 00000010  1C40      ADD         R0,R0,#0x1
 00000012  1E52      SUB         R2,R2,#0x1
 00000014  D1F9      BNE         L_21  ; T=0x0000000A
    7:     IODIR0=0X0000f000;
 00000016  4800      LDR         R1,=0xF000
 00000018  4800      LDR         R0,=0xE0028008
 0000001A  6001      STR         R1,[R0,#0x0]
    8:     IODIR1=0X0c000000;
 0000001C  4800      LDR         R1,=0xC000000
 0000001E  4800      LDR         R0,=0xE0028018
 00000020  6001      STR         R1,[R0,#0x0]
    9:     for(i=0;i<6;i++)
 00000022  2400      MOV         R4,#0x0
 00000024  ---- Variable 'i' assigned to Register 'R4' ----
 00000024  E00C      B           L_3  ; T=0x00000040
 00000026          L_4:
   11:         lcd_cmd(cmd[i]);
 00000026  1C20      MOV         R0,R4 ; i
 00000028  0601      LSL         R1,R0,#0x18 ; i
 0000002A  0E09      LSR         R1,R1,#0x18
 0000002C  A800      ADD         R0,R13,#0x0
 0000002E  5C40      LDRB        R0,[R0,R1]
 00000030  F7FF      BL          lcd_cmd?T  ; T=0x0001  (1)
 00000032  FFE6      BL          lcd_cmd?T  ; T=0x0001  (2)
   12:         Delay(50000);
 00000034  4800      LDR         R0,=0xC350
 00000036  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000038  FFE3      BL          Delay?T  ; T=0x0001  (2)
   13:     }
 0000003A  3401      ADD         R4,#0x1
 0000003C  0624      LSL         R4,R4,#0x18
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 4   

 0000003E  0E24      LSR         R4,R4,#0x18
 00000040          L_3:
 00000040  1C20      MOV         R0,R4 ; i
 00000042  0600      LSL         R0,R0,#0x18 ; i
 00000044  0E00      LSR         R0,R0,#0x18
 00000046  2806      CMP         R0,#0x6
 00000048  DBED      BLT         L_4  ; T=0x00000026
 0000004A            ; SCOPE-END
   14: }
 0000004A  B002      ADD         R13,#0x8
 0000004C  BC10      POP         {R4}
 0000004E  BC08      POP         {R3}
 00000050  4718      BX          R3
 00000052          ENDP ; 'lcd_init?T'


*** CODE SEGMENT '?PR?lcd_cmd?T?LCD':
   16: void lcd_cmd(unsigned int command)
 00000000  B530      PUSH        {R4-R5,LR}
 00000002  1C05      MOV         R5,R0 ; command
 00000004  ---- Variable 'command' assigned to Register 'R5' ----
   17: {
 00000004            ; SCOPE-START
   19:       x=command;
 00000004  1C2C      MOV         R4,R5 ; command
 00000006  ---- Variable 'x' assigned to Register 'R4' ----
   20:       x=x & 0xf0;
 00000006  20F0      MOV         R0,#0xF0
 00000008  4004      AND         R4,R0
   21:       x=x<<8;
 0000000A  0224      LSL         R4,R4,#0x8 ; x
   22:       IOCLR0 = 0x0000f000;
 0000000C  4800      LDR         R1,=0xF000
 0000000E  4800      LDR         R0,=0xE002800C
 00000010  6001      STR         R1,[R0,#0x0]
   23:       IOSET0=x;
 00000012  1C21      MOV         R1,R4 ; x
 00000014  4800      LDR         R0,=0xE0028004
 00000016  6001      STR         R1,[R0,#0x0]
   24:       IOCLR1=0x0c000000;        //register select and enable
 00000018  4800      LDR         R1,=0xC000000
 0000001A  4800      LDR         R0,=0xE002801C
 0000001C  6001      STR         R1,[R0,#0x0]
   25:       IOSET1=0x08000000;        //rs=0 n en=1 pin 22 rs
 0000001E  4800      LDR         R1,=0x8000000
 00000020  4800      LDR         R0,=0xE0028014
 00000022  6001      STR         R1,[R0,#0x0]
   26:       Delay(50000);
 00000024  4800      LDR         R0,=0xC350
 00000026  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000028  FFEB      BL          Delay?T  ; T=0x0001  (2)
   27:       IOCLR1=0x08000000;
 0000002A  4800      LDR         R1,=0x8000000
 0000002C  4800      LDR         R0,=0xE002801C
 0000002E  6001      STR         R1,[R0,#0x0]
   28:       Delay(50000);
 00000030  4800      LDR         R0,=0xC350
 00000032  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000034  FFE5      BL          Delay?T  ; T=0x0001  (2)
   30:     x=command;
 00000036  1C2C      MOV         R4,R5 ; command
   31:       x=x & 0x0f;
 00000038  200F      MOV         R0,#0xF
 0000003A  4004      AND         R4,R0
   32:       IOCLR0 = 0x0000f000;
 0000003C  4800      LDR         R1,=0xF000
 0000003E  4800      LDR         R0,=0xE002800C
 00000040  6001      STR         R1,[R0,#0x0]
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 5   

   33:       x=x<<12;
 00000042  0324      LSL         R4,R4,#0xC ; x
   34:       IOSET0=x;
 00000044  1C21      MOV         R1,R4 ; x
 00000046  4800      LDR         R0,=0xE0028004
 00000048  6001      STR         R1,[R0,#0x0]
   35:       IOCLR1=0x0c000000;        //register select and enable
 0000004A  4800      LDR         R1,=0xC000000
 0000004C  4800      LDR         R0,=0xE002801C
 0000004E  6001      STR         R1,[R0,#0x0]
   36:       IOSET1=0x08000000;
 00000050  4800      LDR         R1,=0x8000000
 00000052  4800      LDR         R0,=0xE0028014
 00000054  6001      STR         R1,[R0,#0x0]
   37:       Delay(50000);
 00000056  4800      LDR         R0,=0xC350
 00000058  F7FF      BL          Delay?T  ; T=0x0001  (1)
 0000005A  FFD2      BL          Delay?T  ; T=0x0001  (2)
   38:       IOCLR1=0x08000000;
 0000005C  4800      LDR         R1,=0x8000000
 0000005E  4800      LDR         R0,=0xE002801C
 00000060  6001      STR         R1,[R0,#0x0]
   39:       Delay(50000);
 00000062  4800      LDR         R0,=0xC350
 00000064  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000066  FFCC      BL          Delay?T  ; T=0x0001  (2)
 00000068            ; SCOPE-END
   40: }
 00000068  BC30      POP         {R4-R5}
 0000006A  BC08      POP         {R3}
 0000006C  4718      BX          R3
 0000006E          ENDP ; 'lcd_cmd?T'


*** CODE SEGMENT '?PR?lcd_data?T?LCD':
   42: void lcd_data(unsigned int data1)
 00000000  B530      PUSH        {R4-R5,LR}
 00000002  1C05      MOV         R5,R0 ; data1
 00000004  ---- Variable 'data1' assigned to Register 'R5' ----
   43: {
 00000004            ; SCOPE-START
   45:       value=data1;
 00000004  1C2C      MOV         R4,R5 ; data1
 00000006  ---- Variable 'value' assigned to Register 'R4' ----
   47:       value=value & 0xf0;
 00000006  20F0      MOV         R0,#0xF0
 00000008  4004      AND         R4,R0
   49:       value=value<<8;
 0000000A  0224      LSL         R4,R4,#0x8 ; value
   50:       IOCLR0 = 0x0000f000;
 0000000C  4800      LDR         R1,=0xF000
 0000000E  4800      LDR         R0,=0xE002800C
 00000010  6001      STR         R1,[R0,#0x0]
   51:       IOSET0=value;
 00000012  1C21      MOV         R1,R4 ; value
 00000014  4800      LDR         R0,=0xE0028004
 00000016  6001      STR         R1,[R0,#0x0]
   52:       IOCLR1=0x0c000000;
 00000018  4800      LDR         R1,=0xC000000
 0000001A  4800      LDR         R0,=0xE002801C
 0000001C  6001      STR         R1,[R0,#0x0]
   53:       IOSET1=0x0C000000;
 0000001E  4800      LDR         R1,=0xC000000
 00000020  4800      LDR         R0,=0xE0028014
 00000022  6001      STR         R1,[R0,#0x0]
   54:       Delay(50000);
 00000024  4800      LDR         R0,=0xC350
 00000026  F7FF      BL          Delay?T  ; T=0x0001  (1)
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 6   

 00000028  FFEB      BL          Delay?T  ; T=0x0001  (2)
   55:       IOCLR1=0x08000000;
 0000002A  4800      LDR         R1,=0x8000000
 0000002C  4800      LDR         R0,=0xE002801C
 0000002E  6001      STR         R1,[R0,#0x0]
   56:       Delay(50000);
 00000030  4800      LDR         R0,=0xC350
 00000032  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000034  FFE5      BL          Delay?T  ; T=0x0001  (2)
   58:       value=data1;
 00000036  1C2C      MOV         R4,R5 ; data1
   59:       value=value & 0x0f;
 00000038  200F      MOV         R0,#0xF
 0000003A  4004      AND         R4,R0
   60:       IOCLR0 = 0x0000f000;
 0000003C  4800      LDR         R1,=0xF000
 0000003E  4800      LDR         R0,=0xE002800C
 00000040  6001      STR         R1,[R0,#0x0]
   61:       value=value<<12;
 00000042  0324      LSL         R4,R4,#0xC ; value
   62:       IOSET0=value;
 00000044  1C21      MOV         R1,R4 ; value
 00000046  4800      LDR         R0,=0xE0028004
 00000048  6001      STR         R1,[R0,#0x0]
   63:       IOCLR1=0x0C000000;
 0000004A  4800      LDR         R1,=0xC000000
 0000004C  4800      LDR         R0,=0xE002801C
 0000004E  6001      STR         R1,[R0,#0x0]
   64:       IOSET1=0x0C000000;
 00000050  4800      LDR         R1,=0xC000000
 00000052  4800      LDR         R0,=0xE0028014
 00000054  6001      STR         R1,[R0,#0x0]
   65:       Delay(50000);
 00000056  4800      LDR         R0,=0xC350
 00000058  F7FF      BL          Delay?T  ; T=0x0001  (1)
 0000005A  FFD2      BL          Delay?T  ; T=0x0001  (2)
   66:       IOCLR1=0x08000000;
 0000005C  4800      LDR         R1,=0x8000000
 0000005E  4800      LDR         R0,=0xE002801C
 00000060  6001      STR         R1,[R0,#0x0]
   67:       Delay(50000);
 00000062  4800      LDR         R0,=0xC350
 00000064  F7FF      BL          Delay?T  ; T=0x0001  (1)
 00000066  FFCC      BL          Delay?T  ; T=0x0001  (2)
 00000068            ; SCOPE-END
   68: }
 00000068  BC30      POP         {R4-R5}
 0000006A  BC08      POP         {R3}
 0000006C  4718      BX          R3
 0000006E          ENDP ; 'lcd_data?T'


*** CODE SEGMENT '?PR?Delay?T?LCD':
   73: void Delay(unsigned int k)
 00000000  ---- Variable 'k' assigned to Register 'R0' ----
   74: {
 00000000            ; SCOPE-START
   76:     for(i=0;i<k;i++);
 00000000  2100      MOV         R1,#0x0
 00000002  ---- Variable 'i' assigned to Register 'R1' ----
 00000002  E000      B           L_8  ; T=0x00000006
 00000004          L_6:
 00000004  3101      ADD         R1,#0x1
 00000006          L_8:
 00000006  1C03      MOV         R3,R0 ; k
 00000008  1C0A      MOV         R2,R1 ; i
 0000000A  429A      CMP         R2,R3 ; i
 0000000C  D3FA      BCC         L_6  ; T=0x00000004
ARM COMPILER V2.32a,  LCD                                                                  21/06/22  23:48:52  PAGE 7   

   77:     for(j=0;j<100;j++);
 0000000E  2000      MOV         R0,#0x0
 00000010  ---- Variable 'j' assigned to Register 'R0' ----
 00000010          L_11:
 00000010  3001      ADD         R0,#0x1
 00000012  1C01      MOV         R1,R0 ; j
 00000014  2964      CMP         R1,#0x64 ; j
 00000016  D3FB      BCC         L_11  ; T=0x00000010
 00000018            ; SCOPE-END
   78: }
 00000018  4770      BX          R14
 0000001A          ENDP ; 'Delay?T'


*** CODE SEGMENT '?PR?lcd_string?T?LCD':
   80: void lcd_string(unsigned char *Ptr)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; Ptr
 00000004  ---- Variable 'Ptr' assigned to Register 'R4' ----
   82:       while(*Ptr)
 00000004  E004      B           L_16  ; T=0x00000010
 00000006          L_18:
   84:           lcd_data(*Ptr);
 00000006  1C20      MOV         R0,R4 ; Ptr
 00000008  7800      LDRB        R0,[R0,#0x0] ; Ptr
 0000000A  F7FF      BL          lcd_data?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_data?T  ; T=0x0001  (2)
   85:           Ptr++;
 0000000E  3401      ADD         R4,#0x1
   86:       }
 00000010          L_16:
 00000010  1C20      MOV         R0,R4 ; Ptr
 00000012  7800      LDRB        R0,[R0,#0x0] ; Ptr
 00000014  2800      CMP         R0,#0x0
 00000016  D1F6      BNE         L_18  ; T=0x00000006
   87: }
 00000018  BC10      POP         {R4}
 0000001A  BC08      POP         {R3}
 0000001C  4718      BX          R3
 0000001E          ENDP ; 'lcd_string?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =         6
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
